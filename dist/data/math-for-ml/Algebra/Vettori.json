{
  "title": "üìå Vettori - Teoria Approfondita",
  "content": "<style>pre { line-height: 125%; }\ntd.linenos .normal { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }\nspan.linenos { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }\ntd.linenos .special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }\nspan.linenos.special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }\n.codehilite .hll { background-color: #ffffcc }\n.codehilite { background: #f8f8f8; }\n.codehilite .c { color: #3D7B7B; font-style: italic } /* Comment */\n.codehilite .err { border: 1px solid #F00 } /* Error */\n.codehilite .k { color: #008000; font-weight: bold } /* Keyword */\n.codehilite .o { color: #666 } /* Operator */\n.codehilite .ch { color: #3D7B7B; font-style: italic } /* Comment.Hashbang */\n.codehilite .cm { color: #3D7B7B; font-style: italic } /* Comment.Multiline */\n.codehilite .cp { color: #9C6500 } /* Comment.Preproc */\n.codehilite .cpf { color: #3D7B7B; font-style: italic } /* Comment.PreprocFile */\n.codehilite .c1 { color: #3D7B7B; font-style: italic } /* Comment.Single */\n.codehilite .cs { color: #3D7B7B; font-style: italic } /* Comment.Special */\n.codehilite .gd { color: #A00000 } /* Generic.Deleted */\n.codehilite .ge { font-style: italic } /* Generic.Emph */\n.codehilite .ges { font-weight: bold; font-style: italic } /* Generic.EmphStrong */\n.codehilite .gr { color: #E40000 } /* Generic.Error */\n.codehilite .gh { color: #000080; font-weight: bold } /* Generic.Heading */\n.codehilite .gi { color: #008400 } /* Generic.Inserted */\n.codehilite .go { color: #717171 } /* Generic.Output */\n.codehilite .gp { color: #000080; font-weight: bold } /* Generic.Prompt */\n.codehilite .gs { font-weight: bold } /* Generic.Strong */\n.codehilite .gu { color: #800080; font-weight: bold } /* Generic.Subheading */\n.codehilite .gt { color: #04D } /* Generic.Traceback */\n.codehilite .kc { color: #008000; font-weight: bold } /* Keyword.Constant */\n.codehilite .kd { color: #008000; font-weight: bold } /* Keyword.Declaration */\n.codehilite .kn { color: #008000; font-weight: bold } /* Keyword.Namespace */\n.codehilite .kp { color: #008000 } /* Keyword.Pseudo */\n.codehilite .kr { color: #008000; font-weight: bold } /* Keyword.Reserved */\n.codehilite .kt { color: #B00040 } /* Keyword.Type */\n.codehilite .m { color: #666 } /* Literal.Number */\n.codehilite .s { color: #BA2121 } /* Literal.String */\n.codehilite .na { color: #687822 } /* Name.Attribute */\n.codehilite .nb { color: #008000 } /* Name.Builtin */\n.codehilite .nc { color: #00F; font-weight: bold } /* Name.Class */\n.codehilite .no { color: #800 } /* Name.Constant */\n.codehilite .nd { color: #A2F } /* Name.Decorator */\n.codehilite .ni { color: #717171; font-weight: bold } /* Name.Entity */\n.codehilite .ne { color: #CB3F38; font-weight: bold } /* Name.Exception */\n.codehilite .nf { color: #00F } /* Name.Function */\n.codehilite .nl { color: #767600 } /* Name.Label */\n.codehilite .nn { color: #00F; font-weight: bold } /* Name.Namespace */\n.codehilite .nt { color: #008000; font-weight: bold } /* Name.Tag */\n.codehilite .nv { color: #19177C } /* Name.Variable */\n.codehilite .ow { color: #A2F; font-weight: bold } /* Operator.Word */\n.codehilite .w { color: #BBB } /* Text.Whitespace */\n.codehilite .mb { color: #666 } /* Literal.Number.Bin */\n.codehilite .mf { color: #666 } /* Literal.Number.Float */\n.codehilite .mh { color: #666 } /* Literal.Number.Hex */\n.codehilite .mi { color: #666 } /* Literal.Number.Integer */\n.codehilite .mo { color: #666 } /* Literal.Number.Oct */\n.codehilite .sa { color: #BA2121 } /* Literal.String.Affix */\n.codehilite .sb { color: #BA2121 } /* Literal.String.Backtick */\n.codehilite .sc { color: #BA2121 } /* Literal.String.Char */\n.codehilite .dl { color: #BA2121 } /* Literal.String.Delimiter */\n.codehilite .sd { color: #BA2121; font-style: italic } /* Literal.String.Doc */\n.codehilite .s2 { color: #BA2121 } /* Literal.String.Double */\n.codehilite .se { color: #AA5D1F; font-weight: bold } /* Literal.String.Escape */\n.codehilite .sh { color: #BA2121 } /* Literal.String.Heredoc */\n.codehilite .si { color: #A45A77; font-weight: bold } /* Literal.String.Interpol */\n.codehilite .sx { color: #008000 } /* Literal.String.Other */\n.codehilite .sr { color: #A45A77 } /* Literal.String.Regex */\n.codehilite .s1 { color: #BA2121 } /* Literal.String.Single */\n.codehilite .ss { color: #19177C } /* Literal.String.Symbol */\n.codehilite .bp { color: #008000 } /* Name.Builtin.Pseudo */\n.codehilite .fm { color: #00F } /* Name.Function.Magic */\n.codehilite .vc { color: #19177C } /* Name.Variable.Class */\n.codehilite .vg { color: #19177C } /* Name.Variable.Global */\n.codehilite .vi { color: #19177C } /* Name.Variable.Instance */\n.codehilite .vm { color: #19177C } /* Name.Variable.Magic */\n.codehilite .il { color: #666 } /* Literal.Number.Integer.Long */\n\n/* Styling per blocchi di codice */\n.codehilite {\n    background: transparent !important;\n    border-radius: 8px;\n    overflow: hidden;\n}\n.codehilite pre {\n    background: transparent !important;\n    margin: 0 !important;\n    padding: 20px !important;\n    font-family: 'Monaco', 'Menlo', 'Consolas', monospace !important;\n    font-size: 14px !important;\n    line-height: 1.5 !important;\n    white-space: pre !important;\n    overflow-x: auto !important;\n    color: inherit !important;\n}\n.codehilite code {\n    background: transparent !important;\n    padding: 0 !important;\n    font-family: inherit !important;\n}\n\n\n.code-wrapper { \n    position: relative; \n}\n.copy-button {\n    position: absolute; \n    top: 12px; \n    right: 12px; \n    padding: 6px 12px; \n    font-size: 12px;\n    cursor: pointer; \n    border: none; \n    border-radius: 4px; \n    background: rgba(255,255,255,0.9);\n    color: #374151; \n    transition: all 0.2s ease;\n    font-weight: 500;\n}\n.copy-button:hover { \n    background: rgba(255,255,255,1);\n    transform: translateY(-1px);\n}\n\n\ndetails.code-container {\n    border: 1px solid #e5e7eb; \n    border-radius: 12px; \n    background: #f9fafb;\n    margin: 16px 0;\n    transition: all 0.3s ease;\n}\ndetails.code-container summary {\n    padding: 12px 16px;\n    font-size: 14px; \n    color: #6b7280; \n    cursor: pointer; \n    outline: none; \n    user-select: none;\n    font-weight: 500;\n}\ndetails.code-container[open] summary::after { \n    content: \" (Hide Code)\"; \n    color: #9ca3af; \n}\ndetails.code-container:not([open]) summary::after { \n    content: \" (Show Code)\"; \n    color: #d1d5db; \n}\ndetails.code-container .code-wrapper {\n    padding: 0;\n    margin: 0;\n}\n/* Blocchi di codice sempre visibili */\n.code-visible {\n    border: 1px solid #e5e7eb;\n    border-radius: 12px;\n    background: #f9fafb;\n    margin: 16px 0;\n}\n.code-visible .code-wrapper {\n    padding: 0;\n    margin: 0;\n}\n</style>\n<h2 id=\"definizione-formale\">üß† Definizione Formale</h2>\n<p>Un <strong>vettore</strong> √® un elemento di uno <strong>spazio vettoriale</strong>. Intuitivamente, un vettore pu√≤ essere pensato come:\n- Un oggetto che ha <strong>direzione</strong>, <strong>verso</strong> e <strong>modulo</strong> (interpretazione geometrica).\n- Una <strong>tupla ordinata</strong> di numeri reali o complessi (interpretazione algebrica).</p>\n<h3 id=\"spazio-vettoriale\">‚úçÔ∏è <span class=\"text-gray-600\">Spazio Vettoriale</span></h3>\n<p>Sia $\\mathbb{F}$ un campo (es. $\\mathbb{R}$ o $\\mathbb{C}$) e $V$ un insieme non vuoto. $V$ √® uno <strong>spazio vettoriale</strong> su $\\mathbb{F}$ se √® dotato di due operazioni:</p>\n<ul>\n<li><strong>Addizione vettoriale</strong>: $+ : V \\times V \\rightarrow V$</li>\n<li><strong>Moltiplicazione per scalare</strong>: $\\cdot : \\mathbb{F} \\times V \\rightarrow V$</li>\n</ul>\n<p>Tali operazioni devono soddisfare gli assiomi degli spazi vettoriali (chiusura, associativit√†, elemento neutro, inverso additivo, distributivit√†, etc.).</p>\n<h3 id=\"rappresentazione-geometrica\">üìê Rappresentazione Geometrica</h3>\n<p>Un vettore in $\\mathbb{R}^n$ pu√≤ essere rappresentato come una <strong>freccia</strong> che parte dall&rsquo;origine e arriva al punto determinato dalle sue coordinate.</p>\n<p>Esempio in $\\mathbb{R}^2$:</p>\n<p>Un vettore $\\vec{v} = (3, 4)$ √® un segmento che parte dall&rsquo;origine $(0,0)$ e termina in $(3,4)$.</p>\n<h2 id=\"notazione\">üìä Notazione</h2>\n<ul>\n<li>Colonna: $\\vec{v} = \\begin{bmatrix} v_1 \\\\ v_2 \\\\ \\vdots \\\\ v_n \\end{bmatrix}$</li>\n<li>Riga: $\\vec{v}^\\top = [v_1, v_2, ..., v_n]$</li>\n</ul>\n<h2 id=\"somma-di-vettori\">‚ûï Somma di Vettori</h2>\n<p>Dati $\\vec{u}, \\vec{v} \\in \\mathbb{R}^n$, la <strong>somma</strong> √® definita come:</p>\n$$\n\\vec{u} + \\vec{v} = \\begin{bmatrix}u_1 + v_1\\\\ u_2 + v_2\\\\ \\ldots\\\\ u_n + v_n\\end{bmatrix}\n$$\n<h3 id=\"interpretazione-geometrica\">üß≠ Interpretazione Geometrica</h3>\n<ul>\n<li>La somma corrisponde alla <strong>regola del parallelogramma</strong>.</li>\n<li>A livello grafico: trasla $\\vec{v}$ in modo che il suo punto iniziale coincida con il termine di $\\vec{u}$; il vettore risultante √® dalla origine alla sommit√† del parallelogramma.</li>\n</ul>\n<p>Prendiamo ad esempio il vettore $\\vec{u} = (1,2)$ e il vettore $\\vec{v} = (2,-1)$. La loro somma risulta essere $\\vec{u} + \\vec{v} = (3,1)$, come mostra l&rsquo;immagine.</p>\n<p><img src=\"/images/tikz/vec-add.svg\" alt=\"Sum Vectors\" style=\"width: 500px; display: block; margin-left: auto; margin-right: auto\"/></p>\n<h2 id=\"moltiplicazione-per-uno-scalare\">üîÅ Moltiplicazione per uno scalare</h2>\n<p>Dato uno scalare $\\alpha \\in \\mathbb{R}$ e un vettore $\\vec{v} \\in \\mathbb{R}^n$:</p>\n$$\n\\alpha \\vec{v} = \\begin{bmatrix}\\alpha v_1\\\\ \\alpha v_2\\\\ \\ldots\\\\ \\alpha v_n\\end{bmatrix}\n$$\n<h3 id=\"interpretazione-geometrica_1\">üìè Interpretazione Geometrica</h3>\n<ul>\n<li>Cambia la <strong>lunghezza</strong> del vettore (modulo) e, se $\\alpha < 0$, anche il <strong>verso</strong>.</li>\n</ul>\n<h2 id=\"norma-lunghezza-di-un-vettore\">üìè Norma (lunghezza) di un vettore</h2>\n<p>Per $\\vec{v} \\in \\mathbb{R}^n$:</p>\n$$\n\\|\\vec{v}\\| = \\sqrt{v_1^2 + v_2^2 + \\ldots + v_n^2}\n$$\n<p>Interpretazione geometrica: distanza euclidea tra l&rsquo;origine e il punto finale del vettore.</p>\n<h2 id=\"prodotto-scalare-inner-product\">üî≤ Prodotto Scalare (Inner Product)</h2>\n<p>Per due vettori $\\vec{u}, \\vec{v} \\in \\mathbb{R}^n$:</p>\n$$\n\\vec{u} \\cdot \\vec{v} = u_1 v_1 + u_2 v_2 + \\ldots + u_n v_n = \\sum_{i=1}^{n} u_i v_i\n$$\n<h3 id=\"interpretazione-geometrica_2\">üß≠ Interpretazione Geometrica</h3>\n$$\n\\vec{u} \\cdot \\vec{v} = \\|\\vec{u}\\| \\|\\vec{v}\\| \\cos(\\theta)\n$$\n<p>Dove $\\theta$ √® l&rsquo;angolo tra i due vettori.</p>\n<h4 id=\"casi-particolari\">üîπ Casi Particolari:</h4>\n<ul>\n<li>$\\vec{u} \\cdot \\vec{v} = 0$ ‚üπ i vettori sono <strong>ortogonali</strong>.</li>\n<li>$\\vec{u} \\cdot \\vec{v} > 0$ ‚üπ angolo acuto.</li>\n<li>$\\vec{u} \\cdot \\vec{v} < 0$ ‚üπ angolo ottuso.</li>\n</ul>\n<p>Questa non √® altro che la formula della similarit√† coseno, infatti:</p>\n$$\n\\cos(\\theta) = \\frac{\\vec{u} \\cdot \\vec{v}}{\\|\\vec{u}\\| \\|\\vec{v}\\|}\n$$\n<p>üëâ <a href=\"/theory/nlp/Semantica/Vector Semantics/Misure di Similarit√† Vettoriale\" class=\"text-blue-600 hover:underline\">Qui</a> c&rsquo;√® un approfondimento sulle metriche di similarit√† tra vettori, tra cui anche la similarit√† coseno (o distanza coseno).</p>\n<p>Per trovare $\\theta$ basta calcolare quindi </p>\n$$\n\\theta = \\arccos\\left(\\frac{\\vec{u} \\cdot \\vec{v}}{\\|\\vec{u}\\| \\|\\vec{v}\\|}\\right).\n$$\n<h4 id=\"esempio\">Esempio:</h4>\n<p>Consideriamo ad esempio i vettori $\\vec {u} = (2, 2)$ e $\\vec{v} = (3, -1)$. Il loro prodotto scalare vale:</p>\n$$\n\\vec{u} \\cdot \\vec{v} = 2 \\cdot 3 + 2 \\cdot (-1) = 6 + -2 = 4.\n$$\n<img src=\"/images/tikz/vec-angle.svg\" alt=\"Dot Product\" style=\"width: 500px; display: block; margin-left: auto; margin-right: auto\"/></p>\n<p>Questo significa che la direzione dei due vettori <strong>non √® n√© perfettamente allineata (parallela)</strong> n√© <strong>perfettamente perpendicolare</strong>. Il prodotto scalare √® positivo, quindi:</p>\n<ul>\n<li>L&rsquo;<strong>angolo tra i vettori √® acuto</strong> (compreso tra $0^\\circ$ e $90^\\circ$).</li>\n<li>I due vettori &ldquo;puntano grossomodo nella stessa direzione&rdquo;, cio√® condividono una certa componente lungo lo stesso asse.</li>\n</ul>\n<h3 id=\"calcolo-dellangolo\">üìê Calcolo dell&rsquo;angolo</h3>\n<p>Calcoliamo la norma dei due vettori:</p>\n<p>$$\n\\|\\vec{u}\\| = \\sqrt{2^2 + 2^2} = \\sqrt{8} = 2\\sqrt{2}\n$$\n$$\n\\|\\vec{v}\\| = \\sqrt{3^2 + (-1)^2} = \\sqrt{9 + 1} = \\sqrt{10}\n$$\n<p>Ora usiamo la formula dell&rsquo;angolo:</p>\n$$\n\\theta = \\arccos\\left(\\frac{\\vec{u} \\cdot \\vec{v}}{\\|\\vec{u}\\| \\|\\vec{v}\\|}\\right) = \n\\arccos\\left(\\frac{4}{2\\sqrt{2} \\cdot \\sqrt{10}}\\right) =\n\\arccos\\left(\\frac{4}{2\\sqrt{20}}\\right) =\n\\arccos\\left(\\frac{2}{\\sqrt{20}}\\right)\n$$\n$$\n\\Rightarrow \\theta \\approx \\arccos\\left(\\frac{2}{4.4721}\\right) \\approx \\arccos(0.4472) \\approx 63.43^\\circ\n$$\n<h3 id=\"intuizione-del-prodotto-scalare\">üß© Intuizione del Prodotto Scalare</h3>\n<ul>\n<li>Il prodotto scalare pu√≤ essere visto come <strong>quanto un vettore &ldquo;proietta&rdquo; sull&rsquo;altro</strong>.</li>\n<li>Pi√π la direzione di $\\vec{v}$ √® <strong>allineata con $\\vec{u}$</strong>, pi√π la componente lungo $\\vec{u}$ sar√† grande.</li>\n<li>Se sono perpendicolari, la proiezione √® nulla, quindi il prodotto scalare √® <strong>zero</strong>.</li>\n</ul>\n<h3 id=\"proiezione-ortogonale\">üîÑ Proiezione Ortogonale</h3>\n<p>La <strong>proiezione di $\\vec{v}$ su $\\vec{u}$</strong> √®:</p>\n$$\n\\text{proj}_{\\vec{u}} \\vec{v} = \\left( \\frac{\\vec{u} \\cdot \\vec{v}}{\\|\\vec{u}\\|^2} \\right) \\vec{u}\n$$\n<p>Nel nostro esempio:</p>\n$$\n\\frac{\\vec{u} \\cdot \\vec{v}}{\\|\\vec{u}\\|^2} = \\frac{4}{8} = 0.5\n\\Rightarrow \\text{proj}_{\\vec{u}} \\vec{v} = 0.5 \\cdot \\vec{u} = (1, 1)\n$$\n<p>üìå Quindi, la parte di $\\vec{v}$ <strong>allineata con $\\vec{u}$</strong> √® il vettore $(1,1)$. Il resto √® <strong>ortogonale</strong>.</p>\n<h2 id=\"prodotto-esterno-outer-product\">‚¨õ Prodotto Esterno (Outer Product)</h2>\n<p>Definizione: dato $\\vec{u} \\in \\mathbb{R}^n$ (colonna), e $\\vec{v}^\\top \\in \\mathbb{R}^m$ (riga):</p>\n$$\n\\vec{u} \\otimes \\vec{v} = \\vec{u} \\cdot \\vec{v}^\\top = \n\\begin{bmatrix}\nu_1 v_1 & u_1 v_2 & \\ldots & u_1 v_m \\\\\nu_2 v_1 & u_2 v_2 & \\ldots & u_2 v_m \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\nu_n v_1 & u_n v_2 & \\ldots & u_n v_m\n\\end{bmatrix}\n$$\n<p>üìê <strong>Risultato</strong>: matrice $n \\times m$</p>\n<h3 id=\"interpretazione-geometrica_3\">üß≠ Interpretazione Geometrica</h3>\n<ul>\n<li>Genera una <strong>matrice rank-1</strong> che rappresenta la combinazione lineare dei vettori.</li>\n<li>Utilizzato in machine learning per rappresentare correlazioni o costruire tensori.</li>\n</ul>\n<h2 id=\"esempi\">üìö Esempi</h2>\n<h3 id=\"somma\">Somma:</h3>\n$$\n\\vec{a} = (1, 2), \\quad \\vec{b} = (3, 4) \\Rightarrow \\vec{a} + \\vec{b} = (4, 6)\n$$\n<h3 id=\"prodotto-scalare\">Prodotto Scalare:</h3>\n$$\n\\vec{a} = (1, 2), \\quad \\vec{b} = (3, 4) \\Rightarrow \\vec{a} \\cdot \\vec{b} = 1 \\cdot 3 + 2 \\cdot 4 = 11\n$$\n<h3 id=\"prodotto-esterno\">Prodotto Esterno:</h3>\n$$\n\\vec{a} = \\begin{bmatrix}1 \\\\ 2\\end{bmatrix}, \\quad \\vec{b}^\\top = \\begin{bmatrix}3 & 4\\end{bmatrix} \\Rightarrow\n\\vec{a} \\otimes \\vec{b} = \n\\begin{bmatrix}\n3 & 4 \\\\\n6 & 8\n\\end{bmatrix}\n$$\n<h2 id=\"ulteriori-concetti\">üîç Ulteriori Concetti</h2>\n<ul>\n<li><strong>Base di uno spazio vettoriale</strong>: insieme di vettori linearmente indipendenti che generano tutto lo spazio.</li>\n<li><strong>Coordinate rispetto a una base</strong>: rappresentano un vettore come combinazione lineare dei vettori base.</li>\n<li><strong>Proiezione ortogonale</strong>: la &ldquo;shadow&rdquo; di un vettore su un altro.</li>\n<li><strong>Ortonormalit√†</strong>: insieme di vettori ortogonali tra loro e con norma unitaria.</li>\n</ul>\n<h2 id=\"applicazioni\">üß© Applicazioni</h2>\n<ul>\n<li>Fisica (forze, velocit√†)</li>\n<li>Computer graphics (trasformazioni)</li>\n<li>Machine learning (spazi di feature)</li>\n<li>Algebra lineare computazionale</li>\n</ul>\n<h2 id=\"conclusione\">üîö Conclusione</h2>\n<p>I vettori sono <strong>strutture fondamentali</strong> in matematica e fisica, che combinano eleganza algebrica con interpretazioni geometriche intuitive. Comprenderli a fondo permette di affrontare con sicurezza temi avanzati come <strong>spazi affini, tensori, matrici, decomposizioni</strong> e molto altro.</p>"
}