{
  "title": "Dimostrazione: La matrice $\\mathbf{X}^\\top \\mathbf{X} + \\lambda \\mathbf{I}$ è sempre invertibile per $\\lambda > 0$",
  "content": "<style>pre { line-height: 125%; }\ntd.linenos .normal { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }\nspan.linenos { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }\ntd.linenos .special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }\nspan.linenos.special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }\n.codehilite .hll { background-color: #ffffcc }\n.codehilite { background: #f8f8f8; }\n.codehilite .c { color: #3D7B7B; font-style: italic } /* Comment */\n.codehilite .err { border: 1px solid #F00 } /* Error */\n.codehilite .k { color: #008000; font-weight: bold } /* Keyword */\n.codehilite .o { color: #666 } /* Operator */\n.codehilite .ch { color: #3D7B7B; font-style: italic } /* Comment.Hashbang */\n.codehilite .cm { color: #3D7B7B; font-style: italic } /* Comment.Multiline */\n.codehilite .cp { color: #9C6500 } /* Comment.Preproc */\n.codehilite .cpf { color: #3D7B7B; font-style: italic } /* Comment.PreprocFile */\n.codehilite .c1 { color: #3D7B7B; font-style: italic } /* Comment.Single */\n.codehilite .cs { color: #3D7B7B; font-style: italic } /* Comment.Special */\n.codehilite .gd { color: #A00000 } /* Generic.Deleted */\n.codehilite .ge { font-style: italic } /* Generic.Emph */\n.codehilite .ges { font-weight: bold; font-style: italic } /* Generic.EmphStrong */\n.codehilite .gr { color: #E40000 } /* Generic.Error */\n.codehilite .gh { color: #000080; font-weight: bold } /* Generic.Heading */\n.codehilite .gi { color: #008400 } /* Generic.Inserted */\n.codehilite .go { color: #717171 } /* Generic.Output */\n.codehilite .gp { color: #000080; font-weight: bold } /* Generic.Prompt */\n.codehilite .gs { font-weight: bold } /* Generic.Strong */\n.codehilite .gu { color: #800080; font-weight: bold } /* Generic.Subheading */\n.codehilite .gt { color: #04D } /* Generic.Traceback */\n.codehilite .kc { color: #008000; font-weight: bold } /* Keyword.Constant */\n.codehilite .kd { color: #008000; font-weight: bold } /* Keyword.Declaration */\n.codehilite .kn { color: #008000; font-weight: bold } /* Keyword.Namespace */\n.codehilite .kp { color: #008000 } /* Keyword.Pseudo */\n.codehilite .kr { color: #008000; font-weight: bold } /* Keyword.Reserved */\n.codehilite .kt { color: #B00040 } /* Keyword.Type */\n.codehilite .m { color: #666 } /* Literal.Number */\n.codehilite .s { color: #BA2121 } /* Literal.String */\n.codehilite .na { color: #687822 } /* Name.Attribute */\n.codehilite .nb { color: #008000 } /* Name.Builtin */\n.codehilite .nc { color: #00F; font-weight: bold } /* Name.Class */\n.codehilite .no { color: #800 } /* Name.Constant */\n.codehilite .nd { color: #A2F } /* Name.Decorator */\n.codehilite .ni { color: #717171; font-weight: bold } /* Name.Entity */\n.codehilite .ne { color: #CB3F38; font-weight: bold } /* Name.Exception */\n.codehilite .nf { color: #00F } /* Name.Function */\n.codehilite .nl { color: #767600 } /* Name.Label */\n.codehilite .nn { color: #00F; font-weight: bold } /* Name.Namespace */\n.codehilite .nt { color: #008000; font-weight: bold } /* Name.Tag */\n.codehilite .nv { color: #19177C } /* Name.Variable */\n.codehilite .ow { color: #A2F; font-weight: bold } /* Operator.Word */\n.codehilite .w { color: #BBB } /* Text.Whitespace */\n.codehilite .mb { color: #666 } /* Literal.Number.Bin */\n.codehilite .mf { color: #666 } /* Literal.Number.Float */\n.codehilite .mh { color: #666 } /* Literal.Number.Hex */\n.codehilite .mi { color: #666 } /* Literal.Number.Integer */\n.codehilite .mo { color: #666 } /* Literal.Number.Oct */\n.codehilite .sa { color: #BA2121 } /* Literal.String.Affix */\n.codehilite .sb { color: #BA2121 } /* Literal.String.Backtick */\n.codehilite .sc { color: #BA2121 } /* Literal.String.Char */\n.codehilite .dl { color: #BA2121 } /* Literal.String.Delimiter */\n.codehilite .sd { color: #BA2121; font-style: italic } /* Literal.String.Doc */\n.codehilite .s2 { color: #BA2121 } /* Literal.String.Double */\n.codehilite .se { color: #AA5D1F; font-weight: bold } /* Literal.String.Escape */\n.codehilite .sh { color: #BA2121 } /* Literal.String.Heredoc */\n.codehilite .si { color: #A45A77; font-weight: bold } /* Literal.String.Interpol */\n.codehilite .sx { color: #008000 } /* Literal.String.Other */\n.codehilite .sr { color: #A45A77 } /* Literal.String.Regex */\n.codehilite .s1 { color: #BA2121 } /* Literal.String.Single */\n.codehilite .ss { color: #19177C } /* Literal.String.Symbol */\n.codehilite .bp { color: #008000 } /* Name.Builtin.Pseudo */\n.codehilite .fm { color: #00F } /* Name.Function.Magic */\n.codehilite .vc { color: #19177C } /* Name.Variable.Class */\n.codehilite .vg { color: #19177C } /* Name.Variable.Global */\n.codehilite .vi { color: #19177C } /* Name.Variable.Instance */\n.codehilite .vm { color: #19177C } /* Name.Variable.Magic */\n.codehilite .il { color: #666 } /* Literal.Number.Integer.Long */\n\n/* Styling per blocchi di codice */\n.codehilite {\n    background: transparent !important;\n    border-radius: 8px;\n    overflow: hidden;\n}\n.codehilite pre {\n    background: transparent !important;\n    margin: 0 !important;\n    padding: 20px !important;\n    font-family: 'Monaco', 'Menlo', 'Consolas', monospace !important;\n    font-size: 14px !important;\n    line-height: 1.5 !important;\n    white-space: pre !important;\n    overflow-x: auto !important;\n    color: inherit !important;\n}\n.codehilite code {\n    background: transparent !important;\n    padding: 0 !important;\n    font-family: inherit !important;\n}\n\n\n.code-wrapper { \n    position: relative; \n}\n.copy-button {\n    position: absolute; \n    top: 12px; \n    right: 12px; \n    padding: 6px 12px; \n    font-size: 12px;\n    cursor: pointer; \n    border: none; \n    border-radius: 4px; \n    background: rgba(255,255,255,0.9);\n    color: #374151; \n    transition: all 0.2s ease;\n    font-weight: 500;\n}\n.copy-button:hover { \n    background: rgba(255,255,255,1);\n    transform: translateY(-1px);\n}\n\n\ndetails.code-container {\n    border: 1px solid #e5e7eb; \n    border-radius: 12px; \n    background: #f9fafb;\n    margin: 16px 0;\n    transition: all 0.3s ease;\n}\ndetails.code-container summary {\n    padding: 12px 16px;\n    font-size: 14px; \n    color: #6b7280; \n    cursor: pointer; \n    outline: none; \n    user-select: none;\n    font-weight: 500;\n}\ndetails.code-container[open] summary::after { \n    content: \" (Hide Code)\"; \n    color: #9ca3af; \n}\ndetails.code-container:not([open]) summary::after { \n    content: \" (Show Code)\"; \n    color: #d1d5db; \n}\ndetails.code-container .code-wrapper {\n    padding: 0;\n    margin: 0;\n}\n/* Blocchi di codice sempre visibili */\n.code-visible {\n    border: 1px solid #e5e7eb;\n    border-radius: 12px;\n    background: #f9fafb;\n    margin: 16px 0;\n}\n.code-visible .code-wrapper {\n    padding: 0;\n    margin: 0;\n}\n</style>\n<p>Vogliamo dimostrare che se $\\lambda > 0$, allora la matrice </p>\n$$\n\\mathbf{M} = \\mathbf{X}^\\top \\mathbf{X} + \\lambda \\mathbf{I}\n$$\n<p>è sempre invertibile. Dimostrare l&rsquo;invertibilità di $\\mathbf{M}$ equivale a verificare che essa sia <strong>definita positiva</strong>, ossia che per ogni vettore non nullo $\\mathbf{v} \\in \\mathbb{R}^{m+1}$, si ha:</p>\n$$\n\\mathbf{v}^\\top \\mathbf{M} \\mathbf{v} > 0.\n$$\n<h2 id=\"passo-1-simmetria-della-matrice-math_inline_28\">Passo 1: Simmetria della matrice $\\mathbf{M}$</h2>\n<p>Dimostriamo che $\\mathbf{M}$ è simmetrica.  </p>\n<ul>\n<li>La matrice $\\mathbf{X}^\\top \\mathbf{X}$ è simmetrica perché:</li>\n</ul>\n$$\n  (\\mathbf{X}^\\top \\mathbf{X})^\\top = \\mathbf{X}^\\top (\\mathbf{X}^\\top)^\\top = \\mathbf{X}^\\top \\mathbf{X}.\n  $$\n<ul>\n<li>\n<p>La matrice identità $\\mathbf{I}$ è ovviamente simmetrica, poiché $\\mathbf{I}^\\top = \\mathbf{I}$.</p>\n</li>\n<li>\n<p>La somma di due matrici simmetriche è ancora una matrice simmetrica:</p>\n</li>\n</ul>\n$$\n  \\mathbf{M}^\\top = (\\mathbf{X}^\\top \\mathbf{X} + \\lambda \\mathbf{I})^\\top = \\mathbf{X}^\\top \\mathbf{X} + \\lambda \\mathbf{I} = \\mathbf{M}.\n  $$\n<p>Quindi, $\\mathbf{M}$ è <strong>simmetrica</strong>.</p>\n<h2 id=\"1-se-math_inline_34-e-definita-positiva-allora-math_inline_35-e-invertibile\">(1) Se $\\mathbf{M}$ è definita positiva, allora $\\mathbf{M}$ è invertibile</h2>\n<p><strong>Assunzione:</strong> Per ogni vettore $\\mathbf{v} \\neq \\mathbf{0}$ in $\\mathbb{R}^{m+1}$ si ha</p>\n$$\n\\mathbf{v}^\\top \\mathbf{M} \\mathbf{v} > 0.\n$$\n<p><strong>Dimostrazione:</strong></p>\n<ol>\n<li>\n<p>Poiché $\\mathbf{M}$ è simmetrica (già dimostrato precedentemente), essa ammette una decomposizione spettrale:\n   $$\n   \\mathbf{M} = \\mathbf{Q} \\mathbf{\\Lambda} \\mathbf{Q}^\\top,\n   $$\n   dove $\\mathbf{Q}$ è una matrice ortogonale e $\\mathbf{\\Lambda}$ è una matrice diagonale con autovalori $\\lambda_1, \\lambda_2, \\dots, \\lambda_{m+1}$.</p>\n</li>\n<li>\n<p>Sia $\\mathbf{v} = \\mathbf{Q}\\mathbf{u}$, con $\\mathbf{u} \\neq \\mathbf{0}$. Allora:\n   $$\n   \\mathbf{v}^\\top \\mathbf{M} \\mathbf{v} = (\\mathbf{Q}\\mathbf{u})^\\top \\mathbf{Q} \\mathbf{\\Lambda} \\mathbf{Q}^\\top (\\mathbf{Q}\\mathbf{u})\n   = \\mathbf{u}^\\top \\mathbf{\\Lambda} \\mathbf{u}\n   = \\sum_{i=1}^{m+1} \\lambda_i u_i^2.\n   $$</p>\n</li>\n<li>\n<p>Poiché per ogni $\\mathbf{v} \\neq \\mathbf{0}$ abbiamo $\\mathbf{v}^\\top \\mathbf{M} \\mathbf{v} > 0$, risulta che:\n   $$\n   \\sum_{i=1}^{m+1} \\lambda_i u_i^2 > 0 \\quad \\text{per ogni } \\mathbf{u} \\neq \\mathbf{0}.\n   $$\n   Questo implica che ciascun autovalore $\\lambda_i$ deve essere strettamente positivo (cioè, $\\lambda_i > 0$ per ogni $i$); altrimenti, si potrebbe scegliere un vettore $\\mathbf{u}$ tale da annullare il contributo relativo a un eventuale autovalore nullo, contraddicendo la positività della forma quadratica.</p>\n</li>\n<li>\n<p>Se tutti gli autovalori sono strettamente positivi, allora il determinante di $\\mathbf{M}$ è:\n   $$\n   \\det(\\mathbf{M}) = \\prod_{i=1}^{m+1} \\lambda_i > 0.\n   $$\n   Un determinante non nullo implica che $\\mathbf{M}$ è invertibile.</p>\n</li>\n</ol>\n<h2 id=\"2-se-math_inline_52-e-invertibile-allora-math_inline_53-e-definita-positiva\">(2) Se $\\mathbf{M}$ è invertibile, allora $\\mathbf{M}$ è definita positiva</h2>\n<p><strong>Assunzione:</strong> $\\mathbf{M}$ è invertibile, cioè $\\det(\\mathbf{M}) \\neq 0$.</p>\n<p><strong>Dimostrazione:</strong></p>\n<ol>\n<li>\n<p>Poiché $\\mathbf{M}$ è simmetrica, anche qui possiamo applicare la decomposizione spettrale:\n   $$\n   \\mathbf{M} = \\mathbf{Q} \\mathbf{\\Lambda} \\mathbf{Q}^\\top,\n   $$\n   con autovalori reali $\\lambda_1, \\dots, \\lambda_{m+1}$.</p>\n</li>\n<li>\n<p>L&rsquo;invertibilità di $\\mathbf{M}$ implica che nessuno degli autovalori è zero, cioè $\\lambda_i \\neq 0$ per ogni $i$.</p>\n</li>\n<li>\n<p>Per dimostrare che $\\mathbf{M}$ è definita positiva, dobbiamo verificare che per ogni $\\mathbf{v} \\neq \\mathbf{0}$:\n   $$\n   \\mathbf{v}^\\top \\mathbf{M} \\mathbf{v} = \\sum_{i=1}^{m+1} \\lambda_i u_i^2 > 0.\n   $$\n   Supponiamo per assurdo che esista almeno un autovalore negativo, cioè esiste $j$ tale che $\\lambda_j < 0$. Allora, scegliendo un vettore $\\mathbf{u}$ tale che $u_j \\neq 0$ e $u_i = 0$ per $i \\neq j$, avremmo:\n   $$\n   \\mathbf{v}^\\top \\mathbf{M} \\mathbf{v} = \\lambda_j u_j^2 < 0,\n   $$\n   contraddicendo l&rsquo;invertibilità &ldquo;ben comportata&rdquo; delle forme quadratiche per matrici simmetriche invertibili. In realtà, per matrici simmetriche, l&rsquo;invertibilità non basta da sola a garantire la definitezza positiva; occorre anche che la forma quadratica associata sia strettamente positiva. Nel contesto in cui $\\mathbf{M} = \\mathbf{X}^\\top \\mathbf{X} + \\lambda \\mathbf{I}$ con $\\lambda > 0$, il termine $\\lambda \\mathbf{I}$ garantisce proprio che non possano esistere autovalori negativi (vedi la parte relativa alla regolarizzazione nella dimostrazione completa).</p>\n</li>\n<li>\n<p>Quindi, in questo caso particolare, l&rsquo;invertibilità di $\\mathbf{M}$ implica che tutti gli autovalori devono essere strettamente positivi, e dunque:\n   $$\n   \\mathbf{v}^\\top \\mathbf{M} \\mathbf{v} > 0 \\quad \\text{per ogni } \\mathbf{v} \\neq \\mathbf{0}.\n   $$\n   Questo significa che $\\mathbf{M}$ è definita positiva.</p>\n</li>\n</ol>\n<h2 id=\"passo-2-espressione-del-prodotto-quadratico-math_inline_74\">Passo 2: Espressione del prodotto quadratico $\\mathbf{v}^\\top \\mathbf{M} \\mathbf{v}$</h2>\n<p>Consideriamo il prodotto quadratico associato a $\\mathbf{M}$:</p>\n$$\n\\mathbf{v}^\\top \\mathbf{M} \\mathbf{v} = \\mathbf{v}^\\top (\\mathbf{X}^\\top \\mathbf{X} + \\lambda \\mathbf{I}) \\mathbf{v}.\n$$\n<p>Usiamo la distributività del prodotto scalare:</p>\n$$\n\\mathbf{v}^\\top \\mathbf{X}^\\top \\mathbf{X} \\mathbf{v} + \\lambda \\mathbf{v}^\\top \\mathbf{I} \\mathbf{v}.\n$$\n<p>Poiché il prodotto con la matrice identità è semplicemente la norma quadrata:</p>\n$$\n\\mathbf{v}^\\top \\mathbf{I} \\mathbf{v} = \\|\\mathbf{v}\\|^2,\n$$\n<p>otteniamo:</p>\n$$\n\\mathbf{v}^\\top \\mathbf{X}^\\top \\mathbf{X} \\mathbf{v} + \\lambda \\|\\mathbf{v}\\|^2.\n$$\n<h2 id=\"passo-3-proprieta-di-semidefinitezza-di-math_inline_76\">Passo 3: Proprietà di semidefinitezza di $\\mathbf{X}^\\top \\mathbf{X}$</h2>\n<p>Dimostriamo ora che $\\mathbf{X}^\\top \\mathbf{X}$ è <strong>semidefinita positiva</strong>.</p>\n<h3 id=\"dimostrazione-della-semidefinitezza-positiva-di-math_inline_78\">Dimostrazione della semidefinitezza positiva di $\\mathbf{X}^\\top \\mathbf{X}$</h3>\n<p>Per ogni vettore $\\mathbf{v} \\neq 0$, consideriamo il prodotto quadratico:</p>\n$$\n\\mathbf{v}^\\top \\mathbf{X}^\\top \\mathbf{X} \\mathbf{v}.\n$$\n<p>Riscriviamolo come:</p>\n$$\n(\\mathbf{X} \\mathbf{v})^\\top (\\mathbf{X} \\mathbf{v}) = \\|\\mathbf{X} \\mathbf{v}\\|^2.\n$$\n<p>Poiché la norma euclidea al quadrato di un vettore è sempre <strong>non negativa</strong>, segue che:</p>\n$$\n\\mathbf{v}^\\top \\mathbf{X}^\\top \\mathbf{X} \\mathbf{v} \\geq 0, \\quad \\forall \\mathbf{v} \\neq 0.\n$$\n<p>Ciò dimostra che $\\mathbf{X}^\\top \\mathbf{X}$ è <strong>semidefinita positiva</strong>.</p>\n<p>Se $\\mathbf{X}$ ha rango massimo (ovvero se le sue colonne sono linearmente indipendenti), allora $\\mathbf{X}^\\top \\mathbf{X}$ è anche <strong>definita positiva</strong>, cioè:</p>\n$$\n\\mathbf{v}^\\top \\mathbf{X}^\\top \\mathbf{X} \\mathbf{v} > 0, \\quad \\forall \\mathbf{v} \\neq 0.\n$$\n<p>Tuttavia, in generale, se $\\mathbf{X}$ non ha rango massimo, $\\mathbf{X}^\\top \\mathbf{X}$ potrebbe avere autovalori nulli, rendendola <strong>non invertibile</strong>.</p>\n<h2 id=\"passo-4-effetto-della-regolarizzazione\">Passo 4: Effetto della regolarizzazione</h2>\n<p>Introduciamo ora il termine di regolarizzazione $\\lambda \\mathbf{I}$.  </p>\n<p>Sappiamo che $\\mathbf{X}^\\top \\mathbf{X}$ è <strong>semidefinita positiva</strong>, quindi:</p>\n$$\n\\mathbf{v}^\\top \\mathbf{X}^\\top \\mathbf{X} \\mathbf{v} \\geq 0.\n$$\n<p>Il termine aggiuntivo $\\lambda \\|\\mathbf{v}\\|^2$ è <strong>strettamente positivo</strong> per ogni $\\mathbf{v} \\neq 0$ se $\\lambda > 0$. Quindi:</p>\n$$\n\\mathbf{v}^\\top \\mathbf{X}^\\top \\mathbf{X} \\mathbf{v} + \\lambda \\|\\mathbf{v}\\|^2 > 0, \\quad \\forall \\mathbf{v} \\neq 0.\n$$\n<p>Questo dimostra che $\\mathbf{M}$ è <strong>definita positiva</strong>.</p>\n<h2 id=\"conclusione\">Conclusione</h2>\n<p>Abbiamo dimostrato che per $\\lambda > 0$, la matrice:</p>\n$$\n\\mathbf{M} = \\mathbf{X}^\\top \\mathbf{X} + \\lambda \\mathbf{I}\n$$\n<p>è <strong>definita positiva</strong> e quindi <strong>sempre invertibile</strong>.  </p>\n<p>Questo garantisce che la soluzione del problema di regressione regolarizzata:</p>\n$$\n\\mathbf{w} = (\\mathbf{X}^\\top \\mathbf{X} + \\lambda \\mathbf{I})^{-1} \\mathbf{X}^\\top \\mathbf{y}\n$$\n<p>è ben definita, eliminando i problemi di non invertibilità che potrebbero verificarsi in assenza della regolarizzazione.</p>"
}