{
  "title": "Regressione",
  "content": "<style>pre { line-height: 125%; }\ntd.linenos .normal { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }\nspan.linenos { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }\ntd.linenos .special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }\nspan.linenos.special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }\n.codehilite .hll { background-color: #ffffcc }\n.codehilite { background: #f8f8f8; }\n.codehilite .c { color: #3D7B7B; font-style: italic } /* Comment */\n.codehilite .err { border: 1px solid #F00 } /* Error */\n.codehilite .k { color: #008000; font-weight: bold } /* Keyword */\n.codehilite .o { color: #666 } /* Operator */\n.codehilite .ch { color: #3D7B7B; font-style: italic } /* Comment.Hashbang */\n.codehilite .cm { color: #3D7B7B; font-style: italic } /* Comment.Multiline */\n.codehilite .cp { color: #9C6500 } /* Comment.Preproc */\n.codehilite .cpf { color: #3D7B7B; font-style: italic } /* Comment.PreprocFile */\n.codehilite .c1 { color: #3D7B7B; font-style: italic } /* Comment.Single */\n.codehilite .cs { color: #3D7B7B; font-style: italic } /* Comment.Special */\n.codehilite .gd { color: #A00000 } /* Generic.Deleted */\n.codehilite .ge { font-style: italic } /* Generic.Emph */\n.codehilite .ges { font-weight: bold; font-style: italic } /* Generic.EmphStrong */\n.codehilite .gr { color: #E40000 } /* Generic.Error */\n.codehilite .gh { color: #000080; font-weight: bold } /* Generic.Heading */\n.codehilite .gi { color: #008400 } /* Generic.Inserted */\n.codehilite .go { color: #717171 } /* Generic.Output */\n.codehilite .gp { color: #000080; font-weight: bold } /* Generic.Prompt */\n.codehilite .gs { font-weight: bold } /* Generic.Strong */\n.codehilite .gu { color: #800080; font-weight: bold } /* Generic.Subheading */\n.codehilite .gt { color: #04D } /* Generic.Traceback */\n.codehilite .kc { color: #008000; font-weight: bold } /* Keyword.Constant */\n.codehilite .kd { color: #008000; font-weight: bold } /* Keyword.Declaration */\n.codehilite .kn { color: #008000; font-weight: bold } /* Keyword.Namespace */\n.codehilite .kp { color: #008000 } /* Keyword.Pseudo */\n.codehilite .kr { color: #008000; font-weight: bold } /* Keyword.Reserved */\n.codehilite .kt { color: #B00040 } /* Keyword.Type */\n.codehilite .m { color: #666 } /* Literal.Number */\n.codehilite .s { color: #BA2121 } /* Literal.String */\n.codehilite .na { color: #687822 } /* Name.Attribute */\n.codehilite .nb { color: #008000 } /* Name.Builtin */\n.codehilite .nc { color: #00F; font-weight: bold } /* Name.Class */\n.codehilite .no { color: #800 } /* Name.Constant */\n.codehilite .nd { color: #A2F } /* Name.Decorator */\n.codehilite .ni { color: #717171; font-weight: bold } /* Name.Entity */\n.codehilite .ne { color: #CB3F38; font-weight: bold } /* Name.Exception */\n.codehilite .nf { color: #00F } /* Name.Function */\n.codehilite .nl { color: #767600 } /* Name.Label */\n.codehilite .nn { color: #00F; font-weight: bold } /* Name.Namespace */\n.codehilite .nt { color: #008000; font-weight: bold } /* Name.Tag */\n.codehilite .nv { color: #19177C } /* Name.Variable */\n.codehilite .ow { color: #A2F; font-weight: bold } /* Operator.Word */\n.codehilite .w { color: #BBB } /* Text.Whitespace */\n.codehilite .mb { color: #666 } /* Literal.Number.Bin */\n.codehilite .mf { color: #666 } /* Literal.Number.Float */\n.codehilite .mh { color: #666 } /* Literal.Number.Hex */\n.codehilite .mi { color: #666 } /* Literal.Number.Integer */\n.codehilite .mo { color: #666 } /* Literal.Number.Oct */\n.codehilite .sa { color: #BA2121 } /* Literal.String.Affix */\n.codehilite .sb { color: #BA2121 } /* Literal.String.Backtick */\n.codehilite .sc { color: #BA2121 } /* Literal.String.Char */\n.codehilite .dl { color: #BA2121 } /* Literal.String.Delimiter */\n.codehilite .sd { color: #BA2121; font-style: italic } /* Literal.String.Doc */\n.codehilite .s2 { color: #BA2121 } /* Literal.String.Double */\n.codehilite .se { color: #AA5D1F; font-weight: bold } /* Literal.String.Escape */\n.codehilite .sh { color: #BA2121 } /* Literal.String.Heredoc */\n.codehilite .si { color: #A45A77; font-weight: bold } /* Literal.String.Interpol */\n.codehilite .sx { color: #008000 } /* Literal.String.Other */\n.codehilite .sr { color: #A45A77 } /* Literal.String.Regex */\n.codehilite .s1 { color: #BA2121 } /* Literal.String.Single */\n.codehilite .ss { color: #19177C } /* Literal.String.Symbol */\n.codehilite .bp { color: #008000 } /* Name.Builtin.Pseudo */\n.codehilite .fm { color: #00F } /* Name.Function.Magic */\n.codehilite .vc { color: #19177C } /* Name.Variable.Class */\n.codehilite .vg { color: #19177C } /* Name.Variable.Global */\n.codehilite .vi { color: #19177C } /* Name.Variable.Instance */\n.codehilite .vm { color: #19177C } /* Name.Variable.Magic */\n.codehilite .il { color: #666 } /* Literal.Number.Integer.Long */\n\n/* Styling per blocchi di codice */\n.codehilite {\n    background: transparent !important;\n    border-radius: 8px;\n    overflow: hidden;\n}\n.codehilite pre {\n    background: transparent !important;\n    margin: 0 !important;\n    padding: 20px !important;\n    font-family: 'Monaco', 'Menlo', 'Consolas', monospace !important;\n    font-size: 14px !important;\n    line-height: 1.5 !important;\n    white-space: pre !important;\n    overflow-x: auto !important;\n    color: inherit !important;\n}\n.codehilite code {\n    background: transparent !important;\n    padding: 0 !important;\n    font-family: inherit !important;\n}\n\n\n.code-wrapper { \n    position: relative; \n}\n.copy-button {\n    position: absolute; \n    top: 12px; \n    right: 12px; \n    padding: 6px 12px; \n    font-size: 12px;\n    cursor: pointer; \n    border: none; \n    border-radius: 4px; \n    background: rgba(255,255,255,0.9);\n    color: #374151; \n    transition: all 0.2s ease;\n    font-weight: 500;\n}\n.copy-button:hover { \n    background: rgba(255,255,255,1);\n    transform: translateY(-1px);\n}\n\n\ndetails.code-container {\n    border: 1px solid #e5e7eb; \n    border-radius: 12px; \n    background: #f9fafb;\n    margin: 16px 0;\n    transition: all 0.3s ease;\n}\ndetails.code-container summary {\n    padding: 12px 16px;\n    font-size: 14px; \n    color: #6b7280; \n    cursor: pointer; \n    outline: none; \n    user-select: none;\n    font-weight: 500;\n}\ndetails.code-container[open] summary::after { \n    content: \" (Hide Code)\"; \n    color: #9ca3af; \n}\ndetails.code-container:not([open]) summary::after { \n    content: \" (Show Code)\"; \n    color: #d1d5db; \n}\ndetails.code-container .code-wrapper {\n    padding: 0;\n    margin: 0;\n}\n</style>\n<h2 id=\"introduzione\">Introduzione</h2>\n<p>La <strong>regressione</strong> è uno dei problemi fondamentali nel machine learning e nel deep learning.<br />\nL&rsquo;obiettivo è apprendere una funzione che mappi un insieme di <strong>caratteristiche</strong> ($\\mathbf{x} \\in \\mathbb{R}^n$) su un valore <strong>numerico continuo</strong> ($y \\in \\mathbb{R}$).  </p>\n<p>Esempi tipici di problemi di regressione includono:  </p>\n<ul>\n<li><strong>Previsione dei prezzi</strong>: stimare il valore di una casa in base a dimensioni, posizione e altre caratteristiche.  </li>\n<li><strong>Analisi finanziaria</strong>: prevedere il valore di un&rsquo;azione sulla base di dati storici.  </li>\n<li><strong>Modellazione climatica</strong>: stimare la temperatura media in un&rsquo;area specifica.  </li>\n</ul>\n<p>A differenza della <strong>classificazione</strong>, dove il target è una <strong>categoria</strong>, nella regressione il target è un <strong>valore continuo</strong>.</p>\n<h2 id=\"tipologie-di-regressione\">Tipologie di Regressione</h2>\n<p>Esistono diverse varianti della regressione, a seconda della complessità del modello e della natura dei dati:</p>\n<ul>\n<li><strong><a href=\"/theory/supervised-learning/Linear Models/Regressione Lineare\" class=\"text-blue-600 hover:underline\">Regressione Lineare</a></strong>: il modello assume che la relazione tra variabili sia una combinazione lineare delle feature.  </li>\n<li><strong><a href=\"/theory/supervised-learning/Non-Linear Models/Regressione Polinomiale\" class=\"text-blue-600 hover:underline\">Regressione Polinomiale</a></strong>: estende la regressione lineare includendo termini polinomiali delle feature.  </li>\n<li><strong><a href=\"/theory/supervised-learning/Linear Models/Regressione Logistica\" class=\"text-blue-600 hover:underline\">Regressione Logistica</a></strong>: usata per classificazione binaria, ma basata su un modello di regressione con output probabilistico.</li>\n</ul>\n<h2 id=\"funzioni-di-perdita-per-la-regressione\">Funzioni di Perdita per la Regressione</h2>\n<p>Nella regressione, le funzioni di perdita misurano quanto il valore predetto $\\hat{y}$ si discosta dal valore reale $y$.<br />\nLe più comuni includono:</p>\n<ul>\n<li><strong><a href=\"./MSE.md\">[Errore Quadratico Medio (MSE)]</a></strong>: penalizza gli errori quadraticamente, rendendo più influenti gli outlier.  </li>\n<li><strong><a href=\"./MAE.md\">[Errore Assoluto Medio (MAE)]</a></strong>: considera la media degli errori assoluti, meno sensibile agli outlier rispetto a MSE.  </li>\n<li><strong><a href=\"./Huber-Loss.md\">[Huber Loss]</a></strong>: una combinazione tra MSE e MAE, più robusta agli outlier.  </li>\n</ul>\n<h2 id=\"regressione-vs-classificazione\">Regressione vs Classificazione</h2>\n<p>Spesso si tende a confondere la regressione con la classificazione, ma le differenze principali sono:</p>\n<table>\n<thead>\n<tr>\n<th><strong>Caratteristica</strong></th>\n<th><strong>Regressione</strong></th>\n<th><strong>Classificazione</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Output atteso</td>\n<td>Valore continuo</td>\n<td>Etichetta discreta</td>\n</tr>\n<tr>\n<td>Funzione di perdita</td>\n<td>MSE, MAE, Huber</td>\n<td>Cross-Entropy, Hinge Loss</td>\n</tr>\n<tr>\n<td>Esempio</td>\n<td>Previsione del prezzo di una casa</td>\n<td>Classificazione di immagini di gatti e cani</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"modelli-di-regressione\">Modelli di Regressione</h2>\n<p>Diverse tecniche possono essere utilizzate per affrontare problemi di regressione:</p>\n<ul>\n<li><strong><a href=\"/theory/supervised-learning/Linear Models/Regressione Lineare\" class=\"text-blue-600 hover:underline\">Regressione Lineare</a></strong>: modello base che assume una relazione lineare tra feature e output.  </li>\n<li><strong><span class=\"text-gray-600\">Support Vector Regression (SVR)</span></strong>: versione della SVM applicata alla regressione.  </li>\n<li><strong><span class=\"text-gray-600\">Random Forest Regressor</span></strong>: metodo basato su alberi per modellare relazioni non lineari.  </li>\n<li><strong><a href=\"./Reti-Neurali-Regressione.md\">Reti Neurali per la Regressione</a></strong>: modelli più potenti per problemi complessi con dati di grandi dimensioni.  </li>\n</ul>\n<h2 id=\"overfitting-e-regolarizzazione\">Overfitting e Regolarizzazione</h2>\n<p>Uno dei problemi principali nella regressione è l&rsquo;<strong><a href=\"/theory/introduction/Overfitting e Underfitting\" class=\"text-blue-600 hover:underline\">overfitting</a></strong>, ovvero quando il modello si adatta troppo ai dati di training e non generalizza bene sui dati nuovi.<br />\nAlcune tecniche per contrastarlo includono:</p>\n<ul>\n<li><strong><a href=\"./Regressione-Ridge.md\">Regressione Ridge (L2)</a></strong>: aggiunge una penalizzazione alla somma dei quadrati dei coefficienti per ridurre l&rsquo;overfitting.  </li>\n<li><strong><a href=\"./Regressione-Lasso.md\">Regressione Lasso (L1)</a></strong>: forza alcuni coefficienti a diventare zero, favorendo la selezione delle feature più rilevanti.  </li>\n<li><strong><a href=\"./Dropout-Early-Stopping.md\">Dropout e Early Stopping</a></strong>: usati nei modelli di deep learning per prevenire l’overfitting.  </li>\n</ul>\n<h2 id=\"conclusione\">Conclusione</h2>\n<p>La regressione è un concetto fondamentale del machine learning con applicazioni in moltissimi settori.<br />\nA differenza della classificazione, l&rsquo;obiettivo è prevedere un valore numerico continuo piuttosto che una categoria.<br />\nL&rsquo;uso della funzione di perdita appropriata e di tecniche di regolarizzazione è cruciale per ottenere un modello efficace.  </p>\n<p>Per approfondire, consulta i seguenti argomenti correlati:</p>\n<ul>\n<li><strong><a href=\"/theory/supervised-learning/Linear Models/Regressione Lineare\" class=\"text-blue-600 hover:underline\">Regressione Lineare</a></strong></li>\n<li><strong><a href=\"/theory/supervised-learning/Non-Linear Models/Regressione Polinomiale\" class=\"text-blue-600 hover:underline\">Regressione Polinomiale</a></strong></li>\n<li><strong><a href=\"/theory/supervised-learning/Linear Models/Regressione Logistica\" class=\"text-blue-600 hover:underline\">Regressione Logistica</a></strong></li>\n<li><strong><a href=\"/theory/introduction/Regolarizzazione\" class=\"text-blue-600 hover:underline\">Regolarizzazione</a></strong></li>\n</ul>"
}