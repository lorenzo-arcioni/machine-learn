{
  "title": "Traccia di una Matrice",
  "content": "<style>pre { line-height: 125%; }\ntd.linenos .normal { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }\nspan.linenos { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }\ntd.linenos .special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }\nspan.linenos.special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }\n.codehilite .hll { background-color: #ffffcc }\n.codehilite { background: #f8f8f8; }\n.codehilite .c { color: #3D7B7B; font-style: italic } /* Comment */\n.codehilite .err { border: 1px solid #F00 } /* Error */\n.codehilite .k { color: #008000; font-weight: bold } /* Keyword */\n.codehilite .o { color: #666 } /* Operator */\n.codehilite .ch { color: #3D7B7B; font-style: italic } /* Comment.Hashbang */\n.codehilite .cm { color: #3D7B7B; font-style: italic } /* Comment.Multiline */\n.codehilite .cp { color: #9C6500 } /* Comment.Preproc */\n.codehilite .cpf { color: #3D7B7B; font-style: italic } /* Comment.PreprocFile */\n.codehilite .c1 { color: #3D7B7B; font-style: italic } /* Comment.Single */\n.codehilite .cs { color: #3D7B7B; font-style: italic } /* Comment.Special */\n.codehilite .gd { color: #A00000 } /* Generic.Deleted */\n.codehilite .ge { font-style: italic } /* Generic.Emph */\n.codehilite .ges { font-weight: bold; font-style: italic } /* Generic.EmphStrong */\n.codehilite .gr { color: #E40000 } /* Generic.Error */\n.codehilite .gh { color: #000080; font-weight: bold } /* Generic.Heading */\n.codehilite .gi { color: #008400 } /* Generic.Inserted */\n.codehilite .go { color: #717171 } /* Generic.Output */\n.codehilite .gp { color: #000080; font-weight: bold } /* Generic.Prompt */\n.codehilite .gs { font-weight: bold } /* Generic.Strong */\n.codehilite .gu { color: #800080; font-weight: bold } /* Generic.Subheading */\n.codehilite .gt { color: #04D } /* Generic.Traceback */\n.codehilite .kc { color: #008000; font-weight: bold } /* Keyword.Constant */\n.codehilite .kd { color: #008000; font-weight: bold } /* Keyword.Declaration */\n.codehilite .kn { color: #008000; font-weight: bold } /* Keyword.Namespace */\n.codehilite .kp { color: #008000 } /* Keyword.Pseudo */\n.codehilite .kr { color: #008000; font-weight: bold } /* Keyword.Reserved */\n.codehilite .kt { color: #B00040 } /* Keyword.Type */\n.codehilite .m { color: #666 } /* Literal.Number */\n.codehilite .s { color: #BA2121 } /* Literal.String */\n.codehilite .na { color: #687822 } /* Name.Attribute */\n.codehilite .nb { color: #008000 } /* Name.Builtin */\n.codehilite .nc { color: #00F; font-weight: bold } /* Name.Class */\n.codehilite .no { color: #800 } /* Name.Constant */\n.codehilite .nd { color: #A2F } /* Name.Decorator */\n.codehilite .ni { color: #717171; font-weight: bold } /* Name.Entity */\n.codehilite .ne { color: #CB3F38; font-weight: bold } /* Name.Exception */\n.codehilite .nf { color: #00F } /* Name.Function */\n.codehilite .nl { color: #767600 } /* Name.Label */\n.codehilite .nn { color: #00F; font-weight: bold } /* Name.Namespace */\n.codehilite .nt { color: #008000; font-weight: bold } /* Name.Tag */\n.codehilite .nv { color: #19177C } /* Name.Variable */\n.codehilite .ow { color: #A2F; font-weight: bold } /* Operator.Word */\n.codehilite .w { color: #BBB } /* Text.Whitespace */\n.codehilite .mb { color: #666 } /* Literal.Number.Bin */\n.codehilite .mf { color: #666 } /* Literal.Number.Float */\n.codehilite .mh { color: #666 } /* Literal.Number.Hex */\n.codehilite .mi { color: #666 } /* Literal.Number.Integer */\n.codehilite .mo { color: #666 } /* Literal.Number.Oct */\n.codehilite .sa { color: #BA2121 } /* Literal.String.Affix */\n.codehilite .sb { color: #BA2121 } /* Literal.String.Backtick */\n.codehilite .sc { color: #BA2121 } /* Literal.String.Char */\n.codehilite .dl { color: #BA2121 } /* Literal.String.Delimiter */\n.codehilite .sd { color: #BA2121; font-style: italic } /* Literal.String.Doc */\n.codehilite .s2 { color: #BA2121 } /* Literal.String.Double */\n.codehilite .se { color: #AA5D1F; font-weight: bold } /* Literal.String.Escape */\n.codehilite .sh { color: #BA2121 } /* Literal.String.Heredoc */\n.codehilite .si { color: #A45A77; font-weight: bold } /* Literal.String.Interpol */\n.codehilite .sx { color: #008000 } /* Literal.String.Other */\n.codehilite .sr { color: #A45A77 } /* Literal.String.Regex */\n.codehilite .s1 { color: #BA2121 } /* Literal.String.Single */\n.codehilite .ss { color: #19177C } /* Literal.String.Symbol */\n.codehilite .bp { color: #008000 } /* Name.Builtin.Pseudo */\n.codehilite .fm { color: #00F } /* Name.Function.Magic */\n.codehilite .vc { color: #19177C } /* Name.Variable.Class */\n.codehilite .vg { color: #19177C } /* Name.Variable.Global */\n.codehilite .vi { color: #19177C } /* Name.Variable.Instance */\n.codehilite .vm { color: #19177C } /* Name.Variable.Magic */\n.codehilite .il { color: #666 } /* Literal.Number.Integer.Long */\n\n/* Styling per blocchi di codice */\n.codehilite {\n    background: transparent !important;\n    border-radius: 8px;\n    overflow: hidden;\n}\n.codehilite pre {\n    background: transparent !important;\n    margin: 0 !important;\n    padding: 20px !important;\n    font-family: 'Monaco', 'Menlo', 'Consolas', monospace !important;\n    font-size: 14px !important;\n    line-height: 1.5 !important;\n    white-space: pre !important;\n    overflow-x: auto !important;\n    color: inherit !important;\n}\n.codehilite code {\n    background: transparent !important;\n    padding: 0 !important;\n    font-family: inherit !important;\n}\n\n\n.code-wrapper { \n    position: relative; \n}\n.copy-button {\n    position: absolute; \n    top: 12px; \n    right: 12px; \n    padding: 6px 12px; \n    font-size: 12px;\n    cursor: pointer; \n    border: none; \n    border-radius: 4px; \n    background: rgba(255,255,255,0.9);\n    color: #374151; \n    transition: all 0.2s ease;\n    font-weight: 500;\n}\n.copy-button:hover { \n    background: rgba(255,255,255,1);\n    transform: translateY(-1px);\n}\n\n\ndetails.code-container {\n    border: 1px solid #e5e7eb; \n    border-radius: 12px; \n    background: #f9fafb;\n    margin: 16px 0;\n    transition: all 0.3s ease;\n}\ndetails.code-container summary {\n    padding: 12px 16px;\n    font-size: 14px; \n    color: #6b7280; \n    cursor: pointer; \n    outline: none; \n    user-select: none;\n    font-weight: 500;\n}\ndetails.code-container[open] summary::after { \n    content: \" (Hide Code)\"; \n    color: #9ca3af; \n}\ndetails.code-container:not([open]) summary::after { \n    content: \" (Show Code)\"; \n    color: #d1d5db; \n}\ndetails.code-container .code-wrapper {\n    padding: 0;\n    margin: 0;\n}\n</style>\n<p>La <strong>traccia</strong> è un operatore lineare che mappa una matrice quadrata in uno scalare, estraendo informazioni dalla diagonale principale. È fondamentale in algebra lineare, fisica e machine learning.</p>\n<h2 id=\"definizione\">Definizione</h2>\n<p>Data una matrice quadrata $A$ di dimensione $n \\times n$, la traccia è:\n$$\n\\text{tr}(A) = \\sum_{i=1}^n a_{ii}.\n$$</p>\n<h2 id=\"proprieta\">Proprietà</h2>\n<h3 id=\"1-linearita\">1. <strong>Linearità</strong></h3>\n<p>Per matrici $A$, $B$ e scalare $c$:\n$$\n\\text{tr}(A + B) = \\text{tr}(A) + \\text{tr}(B), \\quad \\text{tr}(cA) = c \\cdot \\text{tr}(A).\n$$</p>\n<h3 id=\"2-invarianza-alla-trasposizione\">2. <strong>Invarianza alla Trasposizione</strong></h3>\n$$\n\\text{tr}(A) = \\text{tr}(A^T).\n$$\n<h3 id=\"3-proprieta-ciclica\">3. <strong>Proprietà Ciclica</strong></h3>\n<p>La <strong>proprietà ciclica della traccia</strong> è una caratteristica fondamentale in algebra lineare che riguarda il prodotto di matrici. In particolare, se abbiamo tre matrici:</p>\n<ul>\n<li>$A$ di dimensione $m \\times n$,</li>\n<li>$B$ di dimensione $n \\times p$,</li>\n<li>$C$ di dimensione $p \\times m$,</li>\n</ul>\n<p>allora il prodotto $ABC$ è definito e risulta in una matrice quadrata di dimensione $m \\times m$ (poiché il numero di colonne di $C$ è $m$). La traccia di una matrice quadrata è definita come la somma degli elementi sulla diagonale principale.</p>\n<p>La proprietà ciclica afferma che:\n$$\n\\text{tr}(ABC) = \\text{tr}(BCA) = \\text{tr}(CAB).\n$$</p>\n<p>Questa invarianza rispetto agli shift ciclici delle matrici nel prodotto vale in generale.</p>\n<p><strong>Nota:</strong> Se, oltre ad essere definite nel prodotto, le matrici $A$, $B$ e $C$ sono anche <strong>commutative</strong> (cioè $AB = BA$, $AC = CA$, $BC = CB$), allora il prodotto può essere riordinato in maniera arbitraria e si ha:\n$$\n\\text{tr}(ABC) = \\text{tr}(BCA) = \\text{tr}(CAB) = \\text{tr}(CBA) = \\text{tr}(ACB) = \\text{tr}(BAC).\n$$</p>\n<p>La ciclicità è valida per un numero arbitrario di matrici coinvolte nel prodotto.</p>\n<h3 id=\"4-traccia-e-autovalori\">4. <strong>Traccia e Autovalori</strong></h3>\n<p>Se $A$ è diagonalizzabile:\n$$\n\\text{tr}(A) = \\sum_{i=1}^n \\lambda_i \\quad (\\lambda_i \\text{ sono gli autovalori}).\n$$</p>\n<h2 id=\"applicazioni\">Applicazioni</h2>\n<h3 id=\"1-forme-quadratiche\">1. <strong>Forme Quadratiche</strong></h3>\n<p>Per un vettore $\\mathbf{x}$ e matrice $A$:\n$$\n\\mathbf{x}^T A \\mathbf{x} = \\text{tr}(A \\mathbf{x} \\mathbf{x}^T).\n$$</p>\n<h3 id=\"2-gradienti\">2. <strong>Gradienti</strong></h3>\n<ul>\n<li>Gradiente della traccia rispetto a $A$:\n  $$\n  \\nabla_A \\text{tr}(A) = I \\quad (\\text{matrice identità}).\n  $$</li>\n<li>Gradiente di $\\text{tr}(AB)$:\n  $$\n  \\nabla_A \\text{tr}(AB) = B^T.\n  $$</li>\n</ul>\n<h3 id=\"3-ottimizzazione\">3. <strong>Ottimizzazione</strong></h3>\n<p>Utilizzata in funzioni obiettivo come:\n$$\n\\min_A \\text{tr}(A^T A) \\quad (\\text{minimizzazione dell'energia}).\n$$</p>\n<h2 id=\"errori-comuni\">Errori Comuni</h2>\n<h3 id=\"1-gradiente-della-traccia\">1. <strong>Gradiente della Traccia</strong></h3>\n<p>Errore:\n$$\n\\nabla \\text{tr}(A) \\neq \\text{tr}(\\nabla A).\n$$\nCorretto:\n$$\n\\nabla_A \\text{tr}(A) = I.\n$$</p>\n<h2 id=\"note-correlate\">Note Correlate</h2>\n<ul>\n<li><span class=\"text-gray-600\">Autovalori e Autovettori</span></li>\n<li><span class=\"text-gray-600\">Proprietà delle Matrici Trasposte</span></li>\n<li><span class=\"text-gray-600\">Ottimizzazione con Matrici</span></li>\n</ul>"
}