{
  "title": "üìö Analisi Semantica Latente (Latent Semantic Analysis - LSA)",
  "content": "<style>pre { line-height: 125%; }\ntd.linenos .normal { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }\nspan.linenos { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }\ntd.linenos .special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }\nspan.linenos.special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }\n.codehilite .hll { background-color: #ffffcc }\n.codehilite { background: #f8f8f8; }\n.codehilite .c { color: #3D7B7B; font-style: italic } /* Comment */\n.codehilite .err { border: 1px solid #F00 } /* Error */\n.codehilite .k { color: #008000; font-weight: bold } /* Keyword */\n.codehilite .o { color: #666 } /* Operator */\n.codehilite .ch { color: #3D7B7B; font-style: italic } /* Comment.Hashbang */\n.codehilite .cm { color: #3D7B7B; font-style: italic } /* Comment.Multiline */\n.codehilite .cp { color: #9C6500 } /* Comment.Preproc */\n.codehilite .cpf { color: #3D7B7B; font-style: italic } /* Comment.PreprocFile */\n.codehilite .c1 { color: #3D7B7B; font-style: italic } /* Comment.Single */\n.codehilite .cs { color: #3D7B7B; font-style: italic } /* Comment.Special */\n.codehilite .gd { color: #A00000 } /* Generic.Deleted */\n.codehilite .ge { font-style: italic } /* Generic.Emph */\n.codehilite .ges { font-weight: bold; font-style: italic } /* Generic.EmphStrong */\n.codehilite .gr { color: #E40000 } /* Generic.Error */\n.codehilite .gh { color: #000080; font-weight: bold } /* Generic.Heading */\n.codehilite .gi { color: #008400 } /* Generic.Inserted */\n.codehilite .go { color: #717171 } /* Generic.Output */\n.codehilite .gp { color: #000080; font-weight: bold } /* Generic.Prompt */\n.codehilite .gs { font-weight: bold } /* Generic.Strong */\n.codehilite .gu { color: #800080; font-weight: bold } /* Generic.Subheading */\n.codehilite .gt { color: #04D } /* Generic.Traceback */\n.codehilite .kc { color: #008000; font-weight: bold } /* Keyword.Constant */\n.codehilite .kd { color: #008000; font-weight: bold } /* Keyword.Declaration */\n.codehilite .kn { color: #008000; font-weight: bold } /* Keyword.Namespace */\n.codehilite .kp { color: #008000 } /* Keyword.Pseudo */\n.codehilite .kr { color: #008000; font-weight: bold } /* Keyword.Reserved */\n.codehilite .kt { color: #B00040 } /* Keyword.Type */\n.codehilite .m { color: #666 } /* Literal.Number */\n.codehilite .s { color: #BA2121 } /* Literal.String */\n.codehilite .na { color: #687822 } /* Name.Attribute */\n.codehilite .nb { color: #008000 } /* Name.Builtin */\n.codehilite .nc { color: #00F; font-weight: bold } /* Name.Class */\n.codehilite .no { color: #800 } /* Name.Constant */\n.codehilite .nd { color: #A2F } /* Name.Decorator */\n.codehilite .ni { color: #717171; font-weight: bold } /* Name.Entity */\n.codehilite .ne { color: #CB3F38; font-weight: bold } /* Name.Exception */\n.codehilite .nf { color: #00F } /* Name.Function */\n.codehilite .nl { color: #767600 } /* Name.Label */\n.codehilite .nn { color: #00F; font-weight: bold } /* Name.Namespace */\n.codehilite .nt { color: #008000; font-weight: bold } /* Name.Tag */\n.codehilite .nv { color: #19177C } /* Name.Variable */\n.codehilite .ow { color: #A2F; font-weight: bold } /* Operator.Word */\n.codehilite .w { color: #BBB } /* Text.Whitespace */\n.codehilite .mb { color: #666 } /* Literal.Number.Bin */\n.codehilite .mf { color: #666 } /* Literal.Number.Float */\n.codehilite .mh { color: #666 } /* Literal.Number.Hex */\n.codehilite .mi { color: #666 } /* Literal.Number.Integer */\n.codehilite .mo { color: #666 } /* Literal.Number.Oct */\n.codehilite .sa { color: #BA2121 } /* Literal.String.Affix */\n.codehilite .sb { color: #BA2121 } /* Literal.String.Backtick */\n.codehilite .sc { color: #BA2121 } /* Literal.String.Char */\n.codehilite .dl { color: #BA2121 } /* Literal.String.Delimiter */\n.codehilite .sd { color: #BA2121; font-style: italic } /* Literal.String.Doc */\n.codehilite .s2 { color: #BA2121 } /* Literal.String.Double */\n.codehilite .se { color: #AA5D1F; font-weight: bold } /* Literal.String.Escape */\n.codehilite .sh { color: #BA2121 } /* Literal.String.Heredoc */\n.codehilite .si { color: #A45A77; font-weight: bold } /* Literal.String.Interpol */\n.codehilite .sx { color: #008000 } /* Literal.String.Other */\n.codehilite .sr { color: #A45A77 } /* Literal.String.Regex */\n.codehilite .s1 { color: #BA2121 } /* Literal.String.Single */\n.codehilite .ss { color: #19177C } /* Literal.String.Symbol */\n.codehilite .bp { color: #008000 } /* Name.Builtin.Pseudo */\n.codehilite .fm { color: #00F } /* Name.Function.Magic */\n.codehilite .vc { color: #19177C } /* Name.Variable.Class */\n.codehilite .vg { color: #19177C } /* Name.Variable.Global */\n.codehilite .vi { color: #19177C } /* Name.Variable.Instance */\n.codehilite .vm { color: #19177C } /* Name.Variable.Magic */\n.codehilite .il { color: #666 } /* Literal.Number.Integer.Long */\n\n/* Styling per blocchi di codice */\n.codehilite {\n    background: transparent !important;\n    border-radius: 8px;\n    overflow: hidden;\n}\n.codehilite pre {\n    background: transparent !important;\n    margin: 0 !important;\n    padding: 20px !important;\n    font-family: 'Monaco', 'Menlo', 'Consolas', monospace !important;\n    font-size: 14px !important;\n    line-height: 1.5 !important;\n    white-space: pre !important;\n    overflow-x: auto !important;\n    color: inherit !important;\n}\n.codehilite code {\n    background: transparent !important;\n    padding: 0 !important;\n    font-family: inherit !important;\n}\n\n\n.code-wrapper { \n    position: relative; \n}\n.copy-button {\n    position: absolute; \n    top: 12px; \n    right: 12px; \n    padding: 6px 12px; \n    font-size: 12px;\n    cursor: pointer; \n    border: none; \n    border-radius: 4px; \n    background: rgba(255,255,255,0.9);\n    color: #374151; \n    transition: all 0.2s ease;\n    font-weight: 500;\n}\n.copy-button:hover { \n    background: rgba(255,255,255,1);\n    transform: translateY(-1px);\n}\n\n\ndetails.code-container {\n    border: 1px solid #e5e7eb; \n    border-radius: 12px; \n    background: #f9fafb;\n    margin: 16px 0;\n    transition: all 0.3s ease;\n}\ndetails.code-container summary {\n    padding: 12px 16px;\n    font-size: 14px; \n    color: #6b7280; \n    cursor: pointer; \n    outline: none; \n    user-select: none;\n    font-weight: 500;\n}\ndetails.code-container[open] summary::after { \n    content: \" (Hide Code)\"; \n    color: #9ca3af; \n}\ndetails.code-container:not([open]) summary::after { \n    content: \" (Show Code)\"; \n    color: #d1d5db; \n}\ndetails.code-container .code-wrapper {\n    padding: 0;\n    margin: 0;\n}\n</style>\n<h2 id=\"concetti-chiave\">üß† Concetti chiave</h2>\n<p>LSA (anche noto come Latent Semantic Indexing (LSI)) √® una tecnica di <em>apprendimento non supervisionato</em> utilizzata nel <em>Natural Language Processing (NLP)</em> per scoprire <strong>argomenti latenti</strong> nascosti all‚Äôinterno di grandi collezioni di testi.</p>\n<p>L&rsquo;idea √® cercare di estrarre dal testo dei &ldquo;concetti&rdquo; (o temi) nascosti nei documenti e rappresentare questi temi come combinazione lineare delle parole nel vocabolario. Come ad esempio:</p>\n$$\n\\text{DBMS} = \\text{data} \\cdot 0.8 + \\text{system} \\cdot 0.7 + \\text{server} \\cdot 0.6 \n$$\n<p>dove:\n- DBMS √® un concetto latente\n- data, system e server sono parole del vocabolario\n- $0.8, 0.7, 0.6$ sono i pesi che rappresentano la relazione tra questi tre termini e il concetto latente.</p>\n<h2 id=\"matrice-termine-documento\">üßæ Matrice termine-documento</h2>\n<p>Sia $\\mathbf{X} \\in \\mathbb{R}^{|D| \\times |V|}$ una matrice termine-documento o una matrice TF-IDF calcolata a partire da un corpus.</p>\n<p>Dove:</p>\n<ul>\n<li>$|D|$: numero di documenti</li>\n<li>$|V|$: dimensione del vocabolario (numero di termini distinti)</li>\n</ul>\n<p>Ogni elemento $x_{ij}$ di $\\mathbf{X}$ rappresenta l‚Äôimportanza del termine $j$ nel documento $i$.</p>\n<h3 id=\"la-matrice-math_inline_16-cattura\">üìå La matrice $\\mathbf{X}$ cattura:</h3>\n<ul>\n<li>Relazioni <strong>termine vs documento</strong>: quanto √® rappresentativo un termine in un documento.</li>\n<li>Relazioni <strong>termine vs termine</strong>: se due termini co-occorrono nei documenti.</li>\n<li>Relazioni <strong>documento vs documento</strong>: similarit√† semantica tra documenti.</li>\n</ul>\n<h2 id=\"idea-chiave-n1\">üß† Idea chiave n.1</h2>\n<blockquote>\n<p><strong>Esistono $k$ argomenti latenti nascosti nella matrice $\\mathbf{X}$, che vogliamo scoprire.</strong></p>\n</blockquote>\n<p>Questi argomenti non sono osservabili direttamente, ma possono emergere come combinazioni lineari di parole e documenti attraverso l&rsquo;SVD.</p>\n<h2 id=\"idea-chiave-n2\">üîç Idea chiave n.2</h2>\n<blockquote>\n<p><strong>Non considerare $\\mathbf{X}$ solo come dati grezzi: decompone la matrice in componenti strutturate.</strong></p>\n</blockquote>\n<p>La decomposizione serve per <strong>estrarre informazione strutturale</strong> e ridurre la dimensionalit√† mantenendo le componenti principali.</p>\n<h2 id=\"decomposizione-con-svd\">üßÆ Decomposizione con SVD</h2>\n<p>La decomposizione ai valori singolari √®:</p>\n$$\n\\mathbf{X} = \\mathbf{U} \\mathbf{S} \\mathbf{V}^\\top\n$$\n<p>dove:</p>\n<ul>\n<li>$\\mathbf{U} \\in \\mathbb{R}^{|D| \\times |D|}$: <strong>matrice dei documenti</strong>, ortonormale, ci dice quanto ogni documento eÃÄ correlato con gli altri.</li>\n<li>$\\mathbf{S} \\in \\mathbb{R}^{|D| \\times |V|}$: <strong>matrice diagonale</strong> dei valori singolari (importanza degli assi) di $\\mathbf{X}$.</li>\n<li>$\\mathbf{V} \\in \\mathbb{R}^{|V| \\times |V|}$: <strong>matrice dei termini</strong>, ortonormale, ci dice quanto ogni termine eÃÄ correlato con gli altri.</li>\n</ul>\n<p>Ma ovviamente, in questo modo, stiamo mantenendo <strong>tutta l&rsquo;informazione originale</strong>, inclusi rumore e ridondanza. Questo accade perch√©, in assenza di riduzione, stiamo di fatto assegnando <strong>un asse tematico</strong> distinto a ogni documento e a ogni parola, senza generalizzare o cogliere <strong>strutture comuni latenti</strong>. L&rsquo;idea dell&rsquo;LSA √® invece quella di <strong>approssimare $\\mathbf{X}$</strong> mantenendo solo le componenti pi√π rilevanti.</p>\n<h2 id=\"approssimazione-a-rango-ridotto-truncated-svd\">‚úÇÔ∏è Approssimazione a rango ridotto (Truncated SVD)</h2>\n<p>Spesso $\\mathbf{X}$ √® molto grande. Usiamo una versione <strong>troncata</strong>:</p>\n$$\n\\mathbf{X} \\approx \\mathbf{U}_k \\mathbf{S}_k \\mathbf{V}_k^\\top\n$$\n<p>dove:</p>\n<ul>\n<li>$k \\ll \\min(|D|, |V|)$</li>\n<li>$\\mathbf{U}_k \\in \\mathbb{R}^{|D| \\times k}$</li>\n<li>$\\mathbf{S}_k \\in \\mathbb{R}^{k \\times k}$</li>\n<li>$\\mathbf{V}_k \\in \\mathbb{R}^{|V| \\times k}$</li>\n</ul>\n<p>In questo modo otteniamo:</p>\n<ul>\n<li><strong>Vettori documenti</strong> proiettati in $\\mathbb{R}^k$, tramite $\\mathbf{U}_k \\mathbf{S}_k$</li>\n<li><strong>Vettori termini</strong> proiettati in $\\mathbb{R}^k$, tramite $\\mathbf{V}_k \\mathbf{S}_k$</li>\n</ul>\n<h3 id=\"vincoli\">üîí Vincoli:</h3>\n$$\n\\begin{aligned}\n&\\min_{\\mathbf{U_k}, \\mathbf{S_k}, \\mathbf{V_k}} \\|\\mathbf{X} - \\mathbf{U_k S_k V_k}^\\top\\|_F \\\\\n&\\text{s.t. } \\mathbf{U_k}^\\top \\mathbf{U_k} = \\mathbf{I_k}, \\quad \\mathbf{V_k}^\\top \\mathbf{V_k} = \\mathbf{I_k} \\\\\n&\\mathbf{S_k} = \\operatorname{diag}(\\sigma_1, \\sigma_2, \\dots, \\sigma_r) \\quad \\text{con } \\sigma_1 \\geq \\sigma_2 \\geq \\dots \\geq \\sigma_k \\geq 0\n\\end{aligned}\n$$\n<ul>\n<li>$\\|\\cdot\\|_F$: norma di Frobenius (somma dei quadrati di tutti gli elementi della matrice)</li>\n<li>I vincoli garantiscono che $\\mathbf{U}_k$ e $\\mathbf{V}_k$ siano <strong>matrici ortonormali</strong></li>\n<li>I $\\sigma_i$ (valori singolari) sono <strong>sempre reali e non negativi</strong>.</li>\n</ul>\n<p><img src=\"/images/posts/mysvd.png\" width=\"75%\" style=\"display: block; margin-left: auto; margin-right: auto;\"></p>\n<h2 id=\"interpretazione-semantica\">üìå Interpretazione semantica</h2>\n<ul>\n<li>Ogni <strong>colonna di $\\mathbf{V}_k$</strong> rappresenta un <em>argomento latente</em>, ovvero una combinazione di termini che tende a comparire insieme nei documenti. Ogni riga di $\\mathbf{V}_k$ descrive un termine secondo la sua affinit√† con questi argomenti latenti.</li>\n<li>Ogni <strong>riga di $\\mathbf{U}_k$</strong> descrive un documento secondo la sua affinit√† con questi argomenti latenti. Ogni colonna di $\\mathbf{U}_k$ rappresenta un documento secondo la sua affinit√† con questi argomenti latenti.</li>\n<li>La matrice $\\mathbf{S}_k$ scala ciascun asse latente in base alla sua <strong>importanza</strong> (varianza spiegata).</li>\n</ul>\n<h2 id=\"perche-funziona\">üéØ Perch√© funziona?</h2>\n<ul>\n<li>I <strong>primi $k$ valori singolari</strong> $\\sigma_1, \\dots, \\sigma_k$ catturano <strong>la maggior parte dell‚Äôinformazione semantica</strong> presente in $\\mathbf{X}$.</li>\n<li>I valori successivi rappresentano spesso <strong>rumore</strong> (parole rare, anomalie, incoerenze).</li>\n<li>La proiezione in $\\mathbb{R}^k$ consente di cogliere <strong>relazioni latenti</strong> tra termini e documenti, anche se non co-occorrono esplicitamente.</li>\n<li>Questo processo prende il nome di <strong>riduzione dimensionale semantica</strong>: migliora l‚Äôanalisi mantenendo solo le componenti significative.</li>\n</ul>\n<h2 id=\"riduzione-della-dimensionalita-proiezione-di-un-documento\">üîΩ Riduzione della dimensionalit√†: Proiezione di un documento</h2>\n<p>Dato un documento $\\mathbf{d} \\in \\mathbb{R}^{|V|}$ nello spazio originale dei termini:</p>\n$$ \n\\mathbf{d}_k = \\underbrace{\\mathbf{V}_k^\\top}_{k \\times |V|} \\underbrace{\\mathbf{d}}_{|V| \\times 1} \\in \\mathbb{R}^k\n$$\n<ul>\n<li>Stiamo <strong>proiettando $\\mathbf{d}$ nello spazio latente</strong> generato da SVD.</li>\n<li>Questo spazio ha dimensione $k$, dove $k$ √® scelto per catturare solo le direzioni semantiche pi√π rilevanti.</li>\n<li>Il vettore risultante $\\mathbf{d}_k$ descrive il documento $\\mathbf{d}$ secondo la sua affinit√† con questi argomenti latenti.</li>\n<li>Stiamo praticamente riscrivendo $\\mathbf{d}$ nel nuovo spazio latente, mantenendo solo le componenti significative.</li>\n</ul>\n<h2 id=\"perche-usare-la-svd\">üß† Perch√© usare la SVD?</h2>\n<p>La SVD permette di scomporre la matrice $\\mathbf{X}$ come somma di <strong>matrici di rango 1</strong>, pesate dai valori singolari. In particolare:</p>\n$$\n\\mathbf{X} = \\sum_{i=1}^r \\sigma_i \\mathbf{u}_i \\mathbf{v}_i^\\top\n$$\n<p>dove:</p>\n<ul>\n<li>$r = \\operatorname{rank}(\\mathbf{X})$</li>\n<li>$\\sigma_i$ sono i valori singolari ordinati $\\sigma_1 \\geq \\sigma_2 \\geq \\dots \\geq \\sigma_r \\geq 0$</li>\n<li>$\\mathbf{u}_i$ √® la $i$-esima colonna di $\\mathbf{U}$</li>\n<li>$\\mathbf{v}_i$ √® la $i$-esima colonna di $\\mathbf{V}$</li>\n</ul>\n<p>Questa somma rappresenta <strong>la ricostruzione esatta</strong> di $\\mathbf{X}$ come somma di componenti <strong>semplici ma strutturate</strong>.</p>\n<h3 id=\"approssimazione-con-i-primi-math_inline_65-termini\">‚úÇÔ∏è Approssimazione con i primi $k$ termini</h3>\n<p>Per ottenere un‚Äôapprossimazione di rango ridotto, <strong>manteniamo solo i primi $k$ termini</strong>:</p>\n$$\n\\mathbf{X}_k = \\sum_{i=1}^k \\sigma_i \\mathbf{u}_i \\mathbf{v}_i^\\top\n$$\n<p>Questa $\\mathbf{X}_k$ √®:</p>\n<ul>\n<li>La <strong>migliore approssimazione di rango $k$</strong> della matrice $\\mathbf{X}$ (in termini di norma di Frobenius)</li>\n<li>Una versione <strong>compressa e semanticamente significativa</strong> della matrice originale</li>\n<li>Ideale per eliminare rumore e migliorare generalizzazione</li>\n</ul>\n<p>In sintesi, l‚ÄôSVD ci consente di rappresentare $\\mathbf{X}$ come una somma pesata di ‚Äúconcetti latenti‚Äù $\\mathbf{u}_i \\mathbf{v}_i^\\top$, e di mantenerne solo i pi√π importanti per l‚Äôanalisi.</p>\n<h2 id=\"interpretazione-geometrica\">üß≠ Interpretazione geometrica</h2>\n<p>La SVD pu√≤ essere vista come una <strong>pipeline geometrica</strong>:</p>\n$$\n\\mathbf{A}\\mathbf{x} = \\mathbf{U}(\\mathbf{S}(\\mathbf{V}^\\top \\mathbf{x}))\n$$\n<table>\n<thead>\n<tr>\n<th>Fase</th>\n<th>Operazione</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1Ô∏è‚É£ Rotazione</td>\n<td>$\\mathbf{V}^\\top$</td>\n</tr>\n<tr>\n<td>2Ô∏è‚É£ Scalatura</td>\n<td>$\\mathbf{S}$</td>\n</tr>\n<tr>\n<td>3Ô∏è‚É£ Rotazione</td>\n<td>$\\mathbf{U}$</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>Le <strong>componenti principali</strong> (valori singolari) indicano <strong>quanto contribuisce ogni direzione</strong>.</li>\n<li>La <strong>scalatura + rotazioni</strong> preserva struttura ma elimina ridondanza.</li>\n</ul>\n<h2 id=\"limiti-di-lsa\">‚ö†Ô∏è Limiti di LSA</h2>\n<p>Nonostante l&rsquo;efficacia dell&rsquo;LSA nella scoperta di relazioni semantiche latenti, presenta alcune <strong>limitazioni importanti</strong>:</p>\n<ul>\n<li><strong>Assunzione di linearit√†</strong>: LSA rappresenta concetti come combinazioni lineari di termini, ma molte relazioni linguistiche reali sono non lineari e contestuali.</li>\n<li><strong>Incapacit√† di catturare la polisemia</strong>: Un termine con pi√π significati (es. &ldquo;banca&rdquo;) viene rappresentato da un unico vettore, confondendo i contesti.</li>\n<li><strong>Non considera l‚Äôordine delle parole</strong>: Poich√© la matrice termine-documento ignora la sequenza, LSA perde tutte le informazioni sintattiche.</li>\n<li><strong>Scelta di $k$ non banale</strong>: Determinare il numero ottimale di concetti latenti √® un compromesso tra generalizzazione e perdita di informazione.</li>\n<li><strong>Computazionalmente costoso</strong>: La decomposizione SVD su matrici molto grandi pu√≤ richiedere notevoli risorse computazionali.</li>\n<li><strong>Modello statico</strong>: Una volta calcolata la SVD, aggiungere nuovi documenti richiede di ricalcolare tutto da capo.</li>\n</ul>\n<h2 id=\"conclusioni\">‚úÖ Conclusioni</h2>\n<p>L&rsquo;Analisi Semantica Latente (LSA) √® stata una delle prime tecniche efficaci per <strong>estrarre strutture semantiche latenti</strong> da grandi collezioni testuali, e ha influenzato fortemente lo sviluppo successivo nel campo del NLP.</p>\n<p>Punti chiave:</p>\n<ul>\n<li>Riduce la dimensionalit√† e il rumore semantico attraverso la SVD.</li>\n<li>Cattura similarit√† concettuali tra parole e documenti anche in assenza di corrispondenza esplicita.</li>\n<li>√à utile per attivit√† come clustering, retrieval semantico e visualizzazione.</li>\n</ul>\n<p>Tuttavia, le sue limitazioni l&rsquo;hanno resa meno centrale con l‚Äôavvento di <strong>modelli distribuiti e contestuali</strong> pi√π avanzati, come Word2Vec, GloVe e BERT. LSA resta comunque una base teorica utile per comprendere come si pu√≤ passare da rappresentazioni sparse a rappresentazioni semantiche dense.</p>\n<h2 id=\"argomenti-correlati\">üîó Argomenti Correlati</h2>\n<ul>\n<li><strong>TF-IDF</strong>: Metodo per ponderare l&rsquo;importanza dei termini prima dell&rsquo;applicazione dell&rsquo;LSA.</li>\n<li><strong>PCA (Principal Component Analysis)</strong>: Tecnica affine alla SVD per la riduzione dimensionale.</li>\n<li><strong>NMF (Non-negative Matrix Factorization)</strong>: Alternativa a LSA che impone vincoli di non negativit√†.</li>\n<li><strong>Word2Vec / GloVe</strong>: Modelli neurali per l&rsquo;apprendimento di rappresentazioni dense delle parole.</li>\n<li><strong>BERT / Transformer</strong>: Modelli basati su contesto, in grado di gestire la polisemia e la struttura sintattica.</li>\n<li><strong>Topic Modeling (LDA)</strong>: Approccio probabilistico per la scoperta di argomenti latenti nei documenti.</li>\n</ul>"
}