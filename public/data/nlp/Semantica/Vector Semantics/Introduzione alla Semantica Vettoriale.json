{
  "title": "Introduzione alla semantica vettoriale",
  "content": "<style>pre { line-height: 125%; }\ntd.linenos .normal { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }\nspan.linenos { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }\ntd.linenos .special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }\nspan.linenos.special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }\n.codehilite .hll { background-color: #ffffcc }\n.codehilite { background: #f8f8f8; }\n.codehilite .c { color: #3D7B7B; font-style: italic } /* Comment */\n.codehilite .err { border: 1px solid #F00 } /* Error */\n.codehilite .k { color: #008000; font-weight: bold } /* Keyword */\n.codehilite .o { color: #666 } /* Operator */\n.codehilite .ch { color: #3D7B7B; font-style: italic } /* Comment.Hashbang */\n.codehilite .cm { color: #3D7B7B; font-style: italic } /* Comment.Multiline */\n.codehilite .cp { color: #9C6500 } /* Comment.Preproc */\n.codehilite .cpf { color: #3D7B7B; font-style: italic } /* Comment.PreprocFile */\n.codehilite .c1 { color: #3D7B7B; font-style: italic } /* Comment.Single */\n.codehilite .cs { color: #3D7B7B; font-style: italic } /* Comment.Special */\n.codehilite .gd { color: #A00000 } /* Generic.Deleted */\n.codehilite .ge { font-style: italic } /* Generic.Emph */\n.codehilite .ges { font-weight: bold; font-style: italic } /* Generic.EmphStrong */\n.codehilite .gr { color: #E40000 } /* Generic.Error */\n.codehilite .gh { color: #000080; font-weight: bold } /* Generic.Heading */\n.codehilite .gi { color: #008400 } /* Generic.Inserted */\n.codehilite .go { color: #717171 } /* Generic.Output */\n.codehilite .gp { color: #000080; font-weight: bold } /* Generic.Prompt */\n.codehilite .gs { font-weight: bold } /* Generic.Strong */\n.codehilite .gu { color: #800080; font-weight: bold } /* Generic.Subheading */\n.codehilite .gt { color: #04D } /* Generic.Traceback */\n.codehilite .kc { color: #008000; font-weight: bold } /* Keyword.Constant */\n.codehilite .kd { color: #008000; font-weight: bold } /* Keyword.Declaration */\n.codehilite .kn { color: #008000; font-weight: bold } /* Keyword.Namespace */\n.codehilite .kp { color: #008000 } /* Keyword.Pseudo */\n.codehilite .kr { color: #008000; font-weight: bold } /* Keyword.Reserved */\n.codehilite .kt { color: #B00040 } /* Keyword.Type */\n.codehilite .m { color: #666 } /* Literal.Number */\n.codehilite .s { color: #BA2121 } /* Literal.String */\n.codehilite .na { color: #687822 } /* Name.Attribute */\n.codehilite .nb { color: #008000 } /* Name.Builtin */\n.codehilite .nc { color: #00F; font-weight: bold } /* Name.Class */\n.codehilite .no { color: #800 } /* Name.Constant */\n.codehilite .nd { color: #A2F } /* Name.Decorator */\n.codehilite .ni { color: #717171; font-weight: bold } /* Name.Entity */\n.codehilite .ne { color: #CB3F38; font-weight: bold } /* Name.Exception */\n.codehilite .nf { color: #00F } /* Name.Function */\n.codehilite .nl { color: #767600 } /* Name.Label */\n.codehilite .nn { color: #00F; font-weight: bold } /* Name.Namespace */\n.codehilite .nt { color: #008000; font-weight: bold } /* Name.Tag */\n.codehilite .nv { color: #19177C } /* Name.Variable */\n.codehilite .ow { color: #A2F; font-weight: bold } /* Operator.Word */\n.codehilite .w { color: #BBB } /* Text.Whitespace */\n.codehilite .mb { color: #666 } /* Literal.Number.Bin */\n.codehilite .mf { color: #666 } /* Literal.Number.Float */\n.codehilite .mh { color: #666 } /* Literal.Number.Hex */\n.codehilite .mi { color: #666 } /* Literal.Number.Integer */\n.codehilite .mo { color: #666 } /* Literal.Number.Oct */\n.codehilite .sa { color: #BA2121 } /* Literal.String.Affix */\n.codehilite .sb { color: #BA2121 } /* Literal.String.Backtick */\n.codehilite .sc { color: #BA2121 } /* Literal.String.Char */\n.codehilite .dl { color: #BA2121 } /* Literal.String.Delimiter */\n.codehilite .sd { color: #BA2121; font-style: italic } /* Literal.String.Doc */\n.codehilite .s2 { color: #BA2121 } /* Literal.String.Double */\n.codehilite .se { color: #AA5D1F; font-weight: bold } /* Literal.String.Escape */\n.codehilite .sh { color: #BA2121 } /* Literal.String.Heredoc */\n.codehilite .si { color: #A45A77; font-weight: bold } /* Literal.String.Interpol */\n.codehilite .sx { color: #008000 } /* Literal.String.Other */\n.codehilite .sr { color: #A45A77 } /* Literal.String.Regex */\n.codehilite .s1 { color: #BA2121 } /* Literal.String.Single */\n.codehilite .ss { color: #19177C } /* Literal.String.Symbol */\n.codehilite .bp { color: #008000 } /* Name.Builtin.Pseudo */\n.codehilite .fm { color: #00F } /* Name.Function.Magic */\n.codehilite .vc { color: #19177C } /* Name.Variable.Class */\n.codehilite .vg { color: #19177C } /* Name.Variable.Global */\n.codehilite .vi { color: #19177C } /* Name.Variable.Instance */\n.codehilite .vm { color: #19177C } /* Name.Variable.Magic */\n.codehilite .il { color: #666 } /* Literal.Number.Integer.Long */\n\n/* Styling per blocchi di codice */\n.codehilite {\n    background: transparent !important;\n    border-radius: 8px;\n    overflow: hidden;\n}\n.codehilite pre {\n    background: transparent !important;\n    margin: 0 !important;\n    padding: 20px !important;\n    font-family: 'Monaco', 'Menlo', 'Consolas', monospace !important;\n    font-size: 14px !important;\n    line-height: 1.5 !important;\n    white-space: pre !important;\n    overflow-x: auto !important;\n    color: inherit !important;\n}\n.codehilite code {\n    background: transparent !important;\n    padding: 0 !important;\n    font-family: inherit !important;\n}\n\n\n.code-wrapper { \n    position: relative; \n}\n.copy-button {\n    position: absolute; \n    top: 12px; \n    right: 12px; \n    padding: 6px 12px; \n    font-size: 12px;\n    cursor: pointer; \n    border: none; \n    border-radius: 4px; \n    background: rgba(255,255,255,0.9);\n    color: #374151; \n    transition: all 0.2s ease;\n    font-weight: 500;\n}\n.copy-button:hover { \n    background: rgba(255,255,255,1);\n    transform: translateY(-1px);\n}\n\n\ndetails.code-container {\n    border: 1px solid #e5e7eb; \n    border-radius: 12px; \n    background: #f9fafb;\n    margin: 16px 0;\n    transition: all 0.3s ease;\n}\ndetails.code-container summary {\n    padding: 12px 16px;\n    font-size: 14px; \n    color: #6b7280; \n    cursor: pointer; \n    outline: none; \n    user-select: none;\n    font-weight: 500;\n}\ndetails.code-container[open] summary::after { \n    content: \" (Hide Code)\"; \n    color: #9ca3af; \n}\ndetails.code-container:not([open]) summary::after { \n    content: \" (Show Code)\"; \n    color: #d1d5db; \n}\ndetails.code-container .code-wrapper {\n    padding: 0;\n    margin: 0;\n}\n/* Blocchi di codice sempre visibili */\n.code-visible {\n    border: 1px solid #e5e7eb;\n    border-radius: 12px;\n    background: #f9fafb;\n    margin: 16px 0;\n}\n.code-visible .code-wrapper {\n    padding: 0;\n    margin: 0;\n}\n</style>\n<h2 id=\"significato-delle-parole-e-relazioni-semantiche\">Significato delle parole e relazioni semantiche</h2>\n<p>Il concetto di <strong>significato</strong> delle parole è uno dei pilastri fondamentali della linguistica, della semantica e, più recentemente, dell&rsquo;elaborazione del linguaggio naturale.<br />\nComprendere come rappresentare il significato delle parole in forma computazionale è cruciale per lo sviluppo di sistemi in grado di interpretare, analizzare e generare linguaggio umano.</p>\n<p>Una nozione importante è quella di <strong>similarità semantica</strong>: parole che condividono alcuni elementi di significato sono considerate semanticamente simili.<br />\n<strong>Tuttavia</strong>, essere semanticamente simili <strong>non implica</strong> necessariamente essere sinonimi.</p>\n<p>Esempi:\n- &ldquo;car&rdquo; e &ldquo;bicycle&rdquo; sono semanticamente simili perché entrambi rappresentano veicoli per il trasporto personale, ma non sono sinonimi.\n- &ldquo;lion&rdquo; e &ldquo;bear&rdquo; sono entrambi grandi mammiferi carnivori, condividendo alcune caratteristiche biologiche e comportamentali.</p>\n<p><strong>Distinzione chiave</strong>:<br />\n- <strong>Semantic similarity</strong> implica una <strong>condivisione strutturale o categoriale</strong> di significato.\n- <strong>Semantic relatedness</strong> è più ampia: include qualsiasi tipo di relazione concettuale o associativa, anche tra entità non simili.</p>\n<p>Esempi:\n- &ldquo;car&rdquo; e &ldquo;bicycle&rdquo; → <strong>simili</strong> (entrambi mezzi di trasporto).\n- &ldquo;car&rdquo; e &ldquo;gasoline&rdquo; → <strong>correlati</strong>, ma <strong>non simili</strong> (relazione funzionale: un&rsquo;auto usa benzina, ma una benzina non è un veicolo).</p>\n<p>Questa distinzione tra similarità e correlazione semantica è fondamentale nello sviluppo di modelli computazionali per il linguaggio, soprattutto quando si progettano algoritmi di misura della similarità tra parole o documenti.</p>\n<h2 id=\"relazioni-semantiche-lessicali-iperonimia-e-iponimia\">Relazioni semantiche lessicali: iperonimia e iponimia</h2>\n<p>Le <strong>relazioni lessicali</strong> strutturano il lessico di una lingua in reti concettuali. Due tra le relazioni principali sono:</p>\n<h3 id=\"iperonimia\">Iperonimia</h3>\n<p>Un <strong>iperonimo</strong> (<em>hypernym</em>) è un termine che rappresenta una <strong>categoria più generale</strong> rispetto ad altri termini più specifici.</p>\n<p>Esempi:\n- &ldquo;vehicle&rdquo; è l&rsquo;iperonimo di &ldquo;bicycle&rdquo; e &ldquo;car&rdquo;.\n- &ldquo;fruit&rdquo; è l&rsquo;iperonimo di &ldquo;apple&rdquo; e &ldquo;banana&rdquo;.</p>\n<p>Formalmente, possiamo pensare la relazione di iperonimia come una <strong>inclusione</strong>:</p>\n$$\n\\begin{align*}\n\\text{vehicle} &\\supset \\text{bicycle}\\\\\n\\text{fruit}   &\\supset \\text{apple}\n\\end{align*}\n$$\n<p>cioè, tutto ciò che è una &ldquo;bicycle&rdquo; è anche un &ldquo;vehicle&rdquo;, e tutto ciò che è un &ldquo;apple&rdquo; è anche un &ldquo;fruit&rdquo;.</p>\n<h3 id=\"iponimia\">Iponimia</h3>\n<p>Un <strong>iponimo</strong> (<em>hyponym</em>) è invece un termine più specifico, che rappresenta un <strong>sottoinsieme</strong> del concetto espresso dall&rsquo;iperonimo.</p>\n<p>Esempi:\n- &ldquo;banana&rdquo; è un iponimo di &ldquo;fruit&rdquo;.\n- &ldquo;car&rdquo; è un iponimo di &ldquo;vehicle&rdquo;.</p>\n<p>La distinzione tra iperonimia e iponimia è essenziale per la costruzione di ontologie, tassonomie e per l&rsquo;inferenza semantica automatica.</p>\n<p>Formalmente, possiamo pensare la relazione di iponimia come una <strong>inclusione</strong>:</p>\n$$\n\\begin{align*}\n\\text{bicycle} &\\subset \\text{vehicle}\\\\\n\\text{apple}   &\\subset \\text{fruit}\n\\end{align*}\n$$\n<p>cioè, tutto ciò che è una &ldquo;bicycle&rdquo; è anche un &ldquo;vehicle&rdquo;, e tutto ciò che è un &ldquo;apple&rdquo; è anche un &ldquo;fruit&rdquo;.</p>\n<h2 id=\"lapproccio-enumerativo-ai-significati-delle-parole\">L&rsquo;approccio enumerativo ai significati delle parole</h2>\n<p>Tradizionalmente, il significato delle parole è stato trattato attraverso inventari predefiniti di <strong>sensi</strong>.   Ogni parola è associata a un elenco finito di possibili interpretazioni.</p>\n<p>Esempio:<br />\n<strong>&ldquo;Knife&rdquo;</strong> (sostantivo) può essere descritto con i seguenti sensi:\n1. Strumento da taglio con lama affilata e manico.\n2. Arma bianca con lama appuntita.\n3. Proiezione lunga e sottile (es. in un fenomeno naturale o tecnologico).</p>\n<p>In questo approccio, si assume che ogni volta che una parola viene usata in un testo, <strong>venga attivato uno specifico senso</strong> tra quelli elencati.</p>\n<p>Esempi:\n- &ldquo;She chopped the vegetables with a chef’s knife.&rdquo; ➔ Senso: <strong>strumento da cucina</strong>.\n- &ldquo;A man was beaten and cut with a knife.&rdquo; ➔ Senso: <strong>arma</strong>.</p>\n<h2 id=\"limiti-dellapproccio-enumerativo\">Limiti dell&rsquo;approccio enumerativo</h2>\n<p>Nonostante la sua utilità pratica, l&rsquo;approccio enumerativo presenta numerosi limiti:</p>\n<ul>\n<li><strong>Dinamismo linguistico</strong>: le lingue naturali evolvono continuamente, generando nuovi usi e significati che un inventario fisso non può catturare.</li>\n<li><strong>Ambiguità di confine</strong>: esistono usi intermedi o nuovi di una parola che non si adattano bene ai sensi predefiniti.<br />\n  Esempio: una lama di taglio all&rsquo;interno di una macchina industriale è un nuovo senso di &ldquo;knife&rdquo;?</li>\n<li><strong>Dipendenza dal contesto</strong>: il significato attuale di una parola può variare enormemente a seconda del dominio applicativo (es. &ldquo;server&rdquo; in informatica vs. &ldquo;server&rdquo; come cameriere).</li>\n<li><strong>Impossibilità di enumerazione completa</strong>: è praticamente impossibile prevedere <strong>tutti</strong> i sensi che una parola può assumere nel corso del tempo.</li>\n</ul>\n<h2 id=\"una-prospettiva-alternativa-il-significato-basato-sulluso\">Una prospettiva alternativa: il significato basato sull&rsquo;uso</h2>\n<p>A fronte delle difficoltà dell&rsquo;approccio enumerativo, una corrente alternativa propone che il significato <strong>emerga dall&rsquo;uso</strong> della parola nei vari contesti.</p>\n<p>Principi fondamentali:\n- <strong>Ludwig Wittgenstein</strong> (1945):  </p>\n<blockquote>\n<p>&ldquo;Il significato di una parola è il suo uso nel linguaggio.&rdquo;\n- <strong>Zellig Harris</strong> (1954):<br />\n&ldquo;Se due parole hanno ambienti linguistici quasi identici, possiamo considerarli sinonimi.&rdquo;\n- <strong>John Firth</strong> (1957):<br />\n&ldquo;Conoscerai una parola dalla compagnia che mantiene.&rdquo;</p>\n</blockquote>\n<p>Questa visione pone il <strong>contesto</strong> come elemento centrale nella costruzione del significato.</p>\n<h2 id=\"lipotesi-distribuzionale\">L&rsquo;ipotesi distribuzionale</h2>\n<p>L&rsquo;<strong>ipotesi distribuzionale</strong> formalizza la visione basata sull&rsquo;uso:</p>\n<blockquote>\n<p>Parole che appaiono in contesti simili tendono ad avere significati simili.\n[<strong>Harris</strong>, 1954]</p>\n</blockquote>\n<p>Questa idea, semplice ma potente, ha aperto la strada a tutta la moderna semantica computazionale e alla rappresentazione vettoriale del significato delle parole.</p>\n<h3 id=\"interpretazione-pratica\">Interpretazione pratica</h3>\n<p>Osservando <strong>quali parole tendono a co-occorre</strong> nei testi, possiamo inferire la loro relazione semantica.<br />\nNon serve conoscere a priori il significato &ldquo;reale&rdquo; delle parole: il loro comportamento linguistico ne rivela le proprietà semantiche.</p>\n<h2 id=\"esempio-illustrativo-scoprire-il-significato-di-ong-choi\">Esempio illustrativo: scoprire il significato di &ldquo;ong choi&rdquo;</h2>\n<p>Supponiamo di non sapere cosa sia <strong>ong choi</strong>.<br />\nTuttavia, leggiamo queste frasi:\n- &ldquo;Ong choi is delicious sautéed with garlic.&rdquo;\n- &ldquo;Ong choi is superb over rice.&rdquo;\n- &ldquo;Ong choi leaves with salty sauces.&rdquo;</p>\n<p>Confrontiamo ora frasi simili su parole note:\n- &ldquo;Spinach sautéed with garlic over rice.&rdquo;\n- &ldquo;Chard stems and leaves are delicious.&rdquo;\n- &ldquo;Collard greens and other salty leafy greens.&rdquo;</p>\n<p><strong>Osservazione</strong>:<br />\nI contesti di <strong>ong choi</strong> sono simili a quelli di <strong>spinach</strong>, <strong>chard</strong>, e <strong>collard greens</strong>, tutte verdure a foglia verde.</p>\n<p><strong>Inferenza</strong>:<br />\nSenza una definizione esplicita, possiamo dedurre che <strong>ong choi</strong> è probabilmente un tipo di <strong>vegetale a foglia verde</strong>, simile agli altri.</p>\n<h1 id=\"collegamenti-correlati\">Collegamenti correlati</h1>\n<ul>\n<li><a href=\"/theory/nlp/Semantica/Vector Semantics/Modelli di Spazio Semantico\" class=\"text-blue-600 hover:underline\">Modelli di Spazio Semantico</a></li>\n<li><a href=\"/theory/nlp/Semantica/Vector Semantics/Misure di Similarità Vettoriale\" class=\"text-blue-600 hover:underline\">Misure di similarità vettoriale</a></li>\n<li><span class=\"text-gray-600\">Tecniche di pesatura (TF-IDF, PMI)</span></li>\n<li><span class=\"text-gray-600\">Problemi dei modelli vettoriali</span></li>\n</ul>"
}