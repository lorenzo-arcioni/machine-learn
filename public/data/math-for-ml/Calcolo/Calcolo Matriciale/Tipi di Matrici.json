{
  "title": "Tipi di Matrici: Struttura e Interpretazione Geometrica",
  "content": "<style>pre { line-height: 125%; }\ntd.linenos .normal { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }\nspan.linenos { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }\ntd.linenos .special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }\nspan.linenos.special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }\n.codehilite .hll { background-color: #ffffcc }\n.codehilite { background: #f8f8f8; }\n.codehilite .c { color: #3D7B7B; font-style: italic } /* Comment */\n.codehilite .err { border: 1px solid #F00 } /* Error */\n.codehilite .k { color: #008000; font-weight: bold } /* Keyword */\n.codehilite .o { color: #666 } /* Operator */\n.codehilite .ch { color: #3D7B7B; font-style: italic } /* Comment.Hashbang */\n.codehilite .cm { color: #3D7B7B; font-style: italic } /* Comment.Multiline */\n.codehilite .cp { color: #9C6500 } /* Comment.Preproc */\n.codehilite .cpf { color: #3D7B7B; font-style: italic } /* Comment.PreprocFile */\n.codehilite .c1 { color: #3D7B7B; font-style: italic } /* Comment.Single */\n.codehilite .cs { color: #3D7B7B; font-style: italic } /* Comment.Special */\n.codehilite .gd { color: #A00000 } /* Generic.Deleted */\n.codehilite .ge { font-style: italic } /* Generic.Emph */\n.codehilite .ges { font-weight: bold; font-style: italic } /* Generic.EmphStrong */\n.codehilite .gr { color: #E40000 } /* Generic.Error */\n.codehilite .gh { color: #000080; font-weight: bold } /* Generic.Heading */\n.codehilite .gi { color: #008400 } /* Generic.Inserted */\n.codehilite .go { color: #717171 } /* Generic.Output */\n.codehilite .gp { color: #000080; font-weight: bold } /* Generic.Prompt */\n.codehilite .gs { font-weight: bold } /* Generic.Strong */\n.codehilite .gu { color: #800080; font-weight: bold } /* Generic.Subheading */\n.codehilite .gt { color: #04D } /* Generic.Traceback */\n.codehilite .kc { color: #008000; font-weight: bold } /* Keyword.Constant */\n.codehilite .kd { color: #008000; font-weight: bold } /* Keyword.Declaration */\n.codehilite .kn { color: #008000; font-weight: bold } /* Keyword.Namespace */\n.codehilite .kp { color: #008000 } /* Keyword.Pseudo */\n.codehilite .kr { color: #008000; font-weight: bold } /* Keyword.Reserved */\n.codehilite .kt { color: #B00040 } /* Keyword.Type */\n.codehilite .m { color: #666 } /* Literal.Number */\n.codehilite .s { color: #BA2121 } /* Literal.String */\n.codehilite .na { color: #687822 } /* Name.Attribute */\n.codehilite .nb { color: #008000 } /* Name.Builtin */\n.codehilite .nc { color: #00F; font-weight: bold } /* Name.Class */\n.codehilite .no { color: #800 } /* Name.Constant */\n.codehilite .nd { color: #A2F } /* Name.Decorator */\n.codehilite .ni { color: #717171; font-weight: bold } /* Name.Entity */\n.codehilite .ne { color: #CB3F38; font-weight: bold } /* Name.Exception */\n.codehilite .nf { color: #00F } /* Name.Function */\n.codehilite .nl { color: #767600 } /* Name.Label */\n.codehilite .nn { color: #00F; font-weight: bold } /* Name.Namespace */\n.codehilite .nt { color: #008000; font-weight: bold } /* Name.Tag */\n.codehilite .nv { color: #19177C } /* Name.Variable */\n.codehilite .ow { color: #A2F; font-weight: bold } /* Operator.Word */\n.codehilite .w { color: #BBB } /* Text.Whitespace */\n.codehilite .mb { color: #666 } /* Literal.Number.Bin */\n.codehilite .mf { color: #666 } /* Literal.Number.Float */\n.codehilite .mh { color: #666 } /* Literal.Number.Hex */\n.codehilite .mi { color: #666 } /* Literal.Number.Integer */\n.codehilite .mo { color: #666 } /* Literal.Number.Oct */\n.codehilite .sa { color: #BA2121 } /* Literal.String.Affix */\n.codehilite .sb { color: #BA2121 } /* Literal.String.Backtick */\n.codehilite .sc { color: #BA2121 } /* Literal.String.Char */\n.codehilite .dl { color: #BA2121 } /* Literal.String.Delimiter */\n.codehilite .sd { color: #BA2121; font-style: italic } /* Literal.String.Doc */\n.codehilite .s2 { color: #BA2121 } /* Literal.String.Double */\n.codehilite .se { color: #AA5D1F; font-weight: bold } /* Literal.String.Escape */\n.codehilite .sh { color: #BA2121 } /* Literal.String.Heredoc */\n.codehilite .si { color: #A45A77; font-weight: bold } /* Literal.String.Interpol */\n.codehilite .sx { color: #008000 } /* Literal.String.Other */\n.codehilite .sr { color: #A45A77 } /* Literal.String.Regex */\n.codehilite .s1 { color: #BA2121 } /* Literal.String.Single */\n.codehilite .ss { color: #19177C } /* Literal.String.Symbol */\n.codehilite .bp { color: #008000 } /* Name.Builtin.Pseudo */\n.codehilite .fm { color: #00F } /* Name.Function.Magic */\n.codehilite .vc { color: #19177C } /* Name.Variable.Class */\n.codehilite .vg { color: #19177C } /* Name.Variable.Global */\n.codehilite .vi { color: #19177C } /* Name.Variable.Instance */\n.codehilite .vm { color: #19177C } /* Name.Variable.Magic */\n.codehilite .il { color: #666 } /* Literal.Number.Integer.Long */\n\n/* Styling per blocchi di codice */\n.codehilite {\n    background: transparent !important;\n    border-radius: 8px;\n    overflow: hidden;\n}\n.codehilite pre {\n    background: transparent !important;\n    margin: 0 !important;\n    padding: 20px !important;\n    font-family: 'Monaco', 'Menlo', 'Consolas', monospace !important;\n    font-size: 14px !important;\n    line-height: 1.5 !important;\n    white-space: pre !important;\n    overflow-x: auto !important;\n    color: inherit !important;\n}\n.codehilite code {\n    background: transparent !important;\n    padding: 0 !important;\n    font-family: inherit !important;\n}\n\n\n.code-wrapper { \n    position: relative; \n}\n.copy-button {\n    position: absolute; \n    top: 12px; \n    right: 12px; \n    padding: 6px 12px; \n    font-size: 12px;\n    cursor: pointer; \n    border: none; \n    border-radius: 4px; \n    background: rgba(255,255,255,0.9);\n    color: #374151; \n    transition: all 0.2s ease;\n    font-weight: 500;\n}\n.copy-button:hover { \n    background: rgba(255,255,255,1);\n    transform: translateY(-1px);\n}\n\n\ndetails.code-container {\n    border: 1px solid #e5e7eb; \n    border-radius: 12px; \n    background: #f9fafb;\n    margin: 16px 0;\n    transition: all 0.3s ease;\n}\ndetails.code-container summary {\n    padding: 12px 16px;\n    font-size: 14px; \n    color: #6b7280; \n    cursor: pointer; \n    outline: none; \n    user-select: none;\n    font-weight: 500;\n}\ndetails.code-container[open] summary::after { \n    content: \" (Hide Code)\"; \n    color: #9ca3af; \n}\ndetails.code-container:not([open]) summary::after { \n    content: \" (Show Code)\"; \n    color: #d1d5db; \n}\ndetails.code-container .code-wrapper {\n    padding: 0;\n    margin: 0;\n}\n/* Blocchi di codice sempre visibili */\n.code-visible {\n    border: 1px solid #e5e7eb;\n    border-radius: 12px;\n    background: #f9fafb;\n    margin: 16px 0;\n}\n.code-visible .code-wrapper {\n    padding: 0;\n    margin: 0;\n}\n</style>\n<p>Le matrici possono essere classificate in base alla loro struttura, proprietà algebriche o applicazioni. Ogni tipo ha un significato geometrico specifico, che ne rivela il ruolo nelle trasformazioni lineari e multilineari. Questa nota esplora tali interpretazioni.</p>\n<h2 id=\"1-matrici-per-struttura\">1. <strong>Matrici per Struttura</strong></h2>\n<h3 id=\"a-matrice-quadrata-math_inline_8\">a. Matrice Quadrata ($n \\times n$)</h3>\n<p><strong>Struttura</strong>: Stesso numero di righe e colonne.<br />\n<strong>Interpretazione Geometrica</strong>:<br />\n- Rappresenta <strong>trasformazioni lineari endomorfe</strong> (da uno spazio $n$-D in sé stesso).<br />\n- Esempi: Rotazioni, riflessioni, scalamenti.  </p>\n<h3 id=\"b-matrice-rettangolare-math_inline_10\">b. Matrice Rettangolare ($m \\times n, m \\neq n$)</h3>\n<p><strong>Struttura</strong>: Dimensioni diverse tra righe e colonne.<br />\n<strong>Interpretazione Geometrica</strong>:<br />\n- <strong>$m > n$</strong>: Proietta uno spazio $m$-D in uno spazio $n$-D (perdita di informazioni).<br />\n- <strong>$m < n$</strong>: &ldquo;Alza&rdquo; uno spazio $m$-D in uno $n$-D (aggiunge dimensioni).  </p>\n<h2 id=\"2-matrici-speciali-per-elementi\">2. <strong>Matrici Speciali per Elementi</strong></h2>\n<h3 id=\"a-matrice-diagonale\">a. Matrice Diagonale</h3>\n<p><strong>Struttura</strong>: $a_{ij} = 0$ se $i \\neq j$.<br />\n<strong>Interpretazione Geometrica</strong>:<br />\n- <strong>Scalamento/Riflessione lungo gli assi</strong>: Ogni elemento $d_i$ scala, comprime o riflette lungo la direzione $i$-esima.<br />\n- <strong>Esempio</strong>:<br />\n  $$ \n  D = \\begin{pmatrix} 2 & 0 \\\\ 0 & 3 \\end{pmatrix} \\quad \\Rightarrow \\quad \\text{Allunga l'asse $x$ di 2 volte e $y$ di 3 volte}. \n  $$  </p>\n<h3 id=\"b-matrice-identita-math_inline_21\">b. Matrice Identità ($I_n$)</h3>\n<p><strong>Struttura</strong>: Elementi diagonali = 1, altri = 0.<br />\n<strong>Interpretazione Geometrica</strong>:<br />\n- <strong>Trasformazione identità</strong>: Non altera lo spazio.<br />\n- <strong>Ruolo</strong>: Punto di riferimento per misurare deformazioni.  </p>\n<h3 id=\"c-matrice-triangolare\">c. Matrice Triangolare</h3>\n<p><strong>Struttura</strong>:<br />\n- <strong>Superiore</strong>: Elementi non nulli sopra/sulla diagonale.<br />\n- <strong>Inferiore</strong>: Elementi non nulli sotto/sulla diagonale.<br />\n<strong>Interpretazione Geometrica</strong>:<br />\n- <strong>Preserva direzioni canoniche</strong>: Le trasformazioni non &ldquo;mescolano&rdquo; certe coordinate.<br />\n- <strong>Esempio (Triangolare Superiore)</strong>:<br />\n  $$ \n  U = \\begin{pmatrix} 1 & 4 \\\\ 0 & 3 \\end{pmatrix} \\quad \\Rightarrow \\quad \\text{Mantiene l'asse $x$ fisso e \"inclina\" l'asse $y$}. \n  $$  </p>\n<h3 id=\"d-matrice-nulla\">d. Matrice Nulla</h3>\n<p><strong>Struttura</strong>: Tutti gli elementi = 0.<br />\n<strong>Interpretazione Geometrica</strong>:<br />\n- <strong>Collasso nello zero</strong>: Mappa ogni vettore nell&rsquo;origine.  </p>\n<h2 id=\"3-matrici-per-proprieta-algebriche\">3. <strong>Matrici per Proprietà Algebriche</strong></h2>\n<h3 id=\"a-matrice-simmetrica-math_inline_22\">a. Matrice Simmetrica ($A = A^T$)</h3>\n<p><strong>Interpretazione Geometrica</strong>:<br />\n- <strong>Scaling lungo assi ortogonali</strong> (Teorema Spettrale): Decomponibile in autovalori/autovettori reali e ortogonali.<br />\n- <strong>Esempio</strong>:<br />\n  $$ \n  S = \\begin{pmatrix} 2 & 1 \\\\ 1 & 2 \\end{pmatrix} \\quad \\Rightarrow \\quad \\text{Scaling lungo gli autovettori $(1,1)$ e $(1,-1)$}. \n  $$  </p>\n<h3 id=\"b-matrice-antisimmetrica-math_inline_23\">b. Matrice Antisimmetrica ($A = -A^T$)</h3>\n<p><strong>Interpretazione Geometrica</strong>:<br />\n- <strong>Rotazioni infinitesime</strong>: Per matrici $3 \\times 3$, corrisponde al prodotto vettoriale (es. $A\\mathbf{v} = \\mathbf{\\omega} \\times \\mathbf{v}$).<br />\n- <strong>Esempio 2D</strong>:<br />\n  $$ \n  A = \\begin{pmatrix} 0 & -1 \\\\ 1 & 0 \\end{pmatrix} \\quad \\Rightarrow \\quad \\text{Rotazione di 90°}. \n  $$  </p>\n<h3 id=\"c-matrice-ortogonale-math_inline_26\">c. Matrice Ortogonale ($Q^T Q = I$)</h3>\n<p><strong>Interpretazione Geometrica</strong>:<br />\n- <strong>Preserva lunghezze e angoli</strong>: Rotazioni o riflessioni.<br />\n- <strong>Esempio 3D</strong>:<br />\n  $$ \n  Q = \\begin{pmatrix} 0 & 0 & 1 \\\\ 1 & 0 & 0 \\\\ 0 & 1 & 0 \\end{pmatrix} \\quad \\Rightarrow \\quad \\text{Permutazione degli assi}. \n  $$  </p>\n<h3 id=\"d-matrice-di-gram-math_inline_27\">d. Matrice di Gram ($A^T A$)</h3>\n<p><strong>Interpretazione Geometrica e Concettuale</strong>:<br />\nLa matrice di Gram rappresenta una <strong>trasformazione simmetrica</strong> che descrive come i vettori vengono <strong>mappati nello spazio immagine di $A$ e poi riportati indietro nel dominio</strong>.</p>\n<h4 id=\"proprieta-fondamentali\">🧠 Proprietà fondamentali:</h4>\n<ul>\n<li><strong>Simmetrica</strong>: $(A^T A)^T = A^T A$.</li>\n<li><strong>Semi-definita positiva</strong>: $x^T A^T A x = \\|Ax\\|^2 \\geq 0$ per ogni $x$.</li>\n<li><strong>Autovalori reali e $\\geq 0$</strong>.</li>\n<li>Se le colonne di $A$ sono linearmente indipendenti → $A^T A$ è <strong>definita positiva</strong>.</li>\n<li><strong>Invarianza per rotazioni</strong>: se $Q$ è ortogonale, allora $(AQ)^T (AQ) = Q^T A^T A Q$ → l’azione di $A^T A$ si adatta in modo coerente a rotazioni del dominio.</li>\n</ul>\n<h4 id=\"cosa-rappresentano-gli-autovettori-di-math_inline_38\">🧭 Cosa rappresentano gli <strong>autovettori di $A^T A$</strong>:</h4>\n<ul>\n<li>Sono le <strong>direzioni privilegiate (da $A$) del dominio</strong> che vengono solo <strong>dilate o compresse</strong>, ma <strong>non ruotate</strong> da $A^T A$.</li>\n<li>Ogni autovettore $v$ soddisfa:\n  $$\n  A^T A v = \\lambda v\n  $$\n  cioè, $v$ viene mantenuto nella <strong>stessa direzione</strong>, ma <strong>scalato</strong> di un fattore $\\lambda$.</li>\n<li>I valori $\\sqrt \\lambda$ rappresentano <strong>quanto viene amplificata</strong> quella direzione da $A$.</li>\n</ul>\n<h4 id=\"conclusione-geometrica\">✅ Conclusione geometrica:</h4>\n<ul>\n<li>$x$ è stato prima <strong>trasformato nel codominio</strong> (via $A$),</li>\n<li>poi <strong>riportato nel dominio</strong>, <strong>non nella stessa direzione di partenza</strong>, ma <strong>in una direzione privilegiata da $A$</strong>.</li>\n<li>$A^T A$ <strong>non ruota arbitrariamente</strong>: essendo simmetrica, deforma lo spazio in modo <strong>bilanciato e coerente con l’orientamento di $A$</strong>.</li>\n<li>La lunghezza di $x$ è aumentata a ogni passaggio → <strong>amplificazione direzionale</strong>.</li>\n</ul>\n<p>👉 Questo mostra <strong>come $A^T A$ modifichi la geometria del dominio</strong> per riflettere l’effetto complessivo della trasformazione $A$.</p>\n<h2 id=\"4-matrici-per-applicazioni\">4. <strong>Matrici per Applicazioni</strong></h2>\n<h3 id=\"a-matrice-di-vandermonde\">a. Matrice di Vandermonde</h3>\n<p><strong>Struttura</strong>: Righe = progressioni geometriche.<br />\n<strong>Interpretazione Geometrica</strong>:<br />\n- <strong>Interpolazione polinomiale</strong>: Mappa punti in uno spazio a coordinate polinomiali.<br />\n- <strong>Esempio</strong>:<br />\n  $$ \n  V = \\begin{pmatrix} 1 & x_1 & x_1^2 \\\\ 1 & x_2 & x_2^2 \\end{pmatrix} \\quad \\Rightarrow \\quad \\text{Curva parabola passante per $(x_1, y_1)$ e $(x_2, y_2)$}. \n  $$  </p>\n<h3 id=\"b-matrice-di-toeplitz\">b. Matrice di Toeplitz</h3>\n<p><strong>Struttura</strong>: Diagonali costanti.<br />\n<strong>Interpretazione Geometrica</strong>:<br />\n- <strong>Sistemi tempo-invarianti</strong>: Modella fenomeni con &ldquo;memoria&rdquo; costante (es. filtri digitali).  </p>\n<h3 id=\"c-matrice-stocastica\">c. Matrice Stocastica</h3>\n<p><strong>Struttura</strong>: Righe sommano a 1.<br />\n<strong>Interpretazione Geometrica</strong>:<br />\n- <strong>Mappa probabilistiche</strong>: Trasforma distribuzioni di probabilità in nuove distribuzioni.  </p>\n<h2 id=\"5-matrici-decomponibili\">5. <strong>Matrici Decomponibili</strong></h2>\n<h3 id=\"a-matrice-definitiva-positiva\">a. Matrice Definitiva Positiva</h3>\n<p><strong>Interpretazione Geometrica</strong>:<br />\n- <strong>&ldquo;Allunga&rdquo; lo spazio in tutte le direzioni</strong>: $\\mathbf{x}^T A \\mathbf{x} > 0$ definisce un ellissoide.<br />\n- <strong>Esempio</strong>:<br />\n  $$ \n  A = \\begin{pmatrix} 2 & 1 \\\\ 1 & 2 \\end{pmatrix} \\quad \\Rightarrow \\quad \\text{Elissoide inclinato}. \n  $$  </p>\n<h3 id=\"b-matrice-diagonalizzabile-math_inline_55\">b. Matrice Diagonalizzabile ($A = PDP^{-1}$)</h3>\n<p><strong>Interpretazione Geometrica</strong>:<br />\n- <strong>Cambio di base</strong>: La trasformazione diventa scalamento in una base di autovettori.  </p>\n<h2 id=\"6-matrici-complesse\">6. <strong>Matrici Complesse</strong></h2>\n<h3 id=\"a-matrice-unitaria-math_inline_56\">a. Matrice Unitaria ($U^\\dagger U = I$)</h3>\n<p><strong>Interpretazione Geometrica</strong>:<br />\n- <strong>Rotazioni complesse</strong>: Preserva il prodotto interno in spazi complessi.  </p>\n<h3 id=\"b-matrice-hermitiana-math_inline_57\">b. Matrice Hermitiana ($A = A^\\dagger$)</h3>\n<p><strong>Interpretazione Geometrica</strong>:<br />\n- <strong>Scaling in spazi complessi</strong>: Analogo delle matrici simmetriche, con autovalori reali.  </p>\n<h2 id=\"collegamenti-a-note-correlate\"><strong>Collegamenti a Note Correlate</strong></h2>\n<ul>\n<li><span class=\"text-gray-600\">Autovalori e Autovettori</span>  </li>\n<li><span class=\"text-gray-600\">Trasformazioni Lineari Geometriche</span>  </li>\n<li><span class=\"text-gray-600\">Decomposizione Spettrale</span>  </li>\n<li><span class=\"text-gray-600\">Metriche Non Euclidee</span>  </li>\n</ul>\n<p>Questa nota unifica struttura algebrica e significato geometrico, mostrando come ogni tipo di matrice modelli trasformazioni specifiche in spazi multidimensionali.</p>"
}