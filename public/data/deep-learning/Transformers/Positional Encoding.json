{
  "title": "Il Positional Encoding: Una Guida Completa",
  "content": "<style>pre { line-height: 125%; }\ntd.linenos .normal { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }\nspan.linenos { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }\ntd.linenos .special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }\nspan.linenos.special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }\n.codehilite .hll { background-color: #ffffcc }\n.codehilite { background: #f8f8f8; }\n.codehilite .c { color: #3D7B7B; font-style: italic } /* Comment */\n.codehilite .err { border: 1px solid #F00 } /* Error */\n.codehilite .k { color: #008000; font-weight: bold } /* Keyword */\n.codehilite .o { color: #666 } /* Operator */\n.codehilite .ch { color: #3D7B7B; font-style: italic } /* Comment.Hashbang */\n.codehilite .cm { color: #3D7B7B; font-style: italic } /* Comment.Multiline */\n.codehilite .cp { color: #9C6500 } /* Comment.Preproc */\n.codehilite .cpf { color: #3D7B7B; font-style: italic } /* Comment.PreprocFile */\n.codehilite .c1 { color: #3D7B7B; font-style: italic } /* Comment.Single */\n.codehilite .cs { color: #3D7B7B; font-style: italic } /* Comment.Special */\n.codehilite .gd { color: #A00000 } /* Generic.Deleted */\n.codehilite .ge { font-style: italic } /* Generic.Emph */\n.codehilite .ges { font-weight: bold; font-style: italic } /* Generic.EmphStrong */\n.codehilite .gr { color: #E40000 } /* Generic.Error */\n.codehilite .gh { color: #000080; font-weight: bold } /* Generic.Heading */\n.codehilite .gi { color: #008400 } /* Generic.Inserted */\n.codehilite .go { color: #717171 } /* Generic.Output */\n.codehilite .gp { color: #000080; font-weight: bold } /* Generic.Prompt */\n.codehilite .gs { font-weight: bold } /* Generic.Strong */\n.codehilite .gu { color: #800080; font-weight: bold } /* Generic.Subheading */\n.codehilite .gt { color: #04D } /* Generic.Traceback */\n.codehilite .kc { color: #008000; font-weight: bold } /* Keyword.Constant */\n.codehilite .kd { color: #008000; font-weight: bold } /* Keyword.Declaration */\n.codehilite .kn { color: #008000; font-weight: bold } /* Keyword.Namespace */\n.codehilite .kp { color: #008000 } /* Keyword.Pseudo */\n.codehilite .kr { color: #008000; font-weight: bold } /* Keyword.Reserved */\n.codehilite .kt { color: #B00040 } /* Keyword.Type */\n.codehilite .m { color: #666 } /* Literal.Number */\n.codehilite .s { color: #BA2121 } /* Literal.String */\n.codehilite .na { color: #687822 } /* Name.Attribute */\n.codehilite .nb { color: #008000 } /* Name.Builtin */\n.codehilite .nc { color: #00F; font-weight: bold } /* Name.Class */\n.codehilite .no { color: #800 } /* Name.Constant */\n.codehilite .nd { color: #A2F } /* Name.Decorator */\n.codehilite .ni { color: #717171; font-weight: bold } /* Name.Entity */\n.codehilite .ne { color: #CB3F38; font-weight: bold } /* Name.Exception */\n.codehilite .nf { color: #00F } /* Name.Function */\n.codehilite .nl { color: #767600 } /* Name.Label */\n.codehilite .nn { color: #00F; font-weight: bold } /* Name.Namespace */\n.codehilite .nt { color: #008000; font-weight: bold } /* Name.Tag */\n.codehilite .nv { color: #19177C } /* Name.Variable */\n.codehilite .ow { color: #A2F; font-weight: bold } /* Operator.Word */\n.codehilite .w { color: #BBB } /* Text.Whitespace */\n.codehilite .mb { color: #666 } /* Literal.Number.Bin */\n.codehilite .mf { color: #666 } /* Literal.Number.Float */\n.codehilite .mh { color: #666 } /* Literal.Number.Hex */\n.codehilite .mi { color: #666 } /* Literal.Number.Integer */\n.codehilite .mo { color: #666 } /* Literal.Number.Oct */\n.codehilite .sa { color: #BA2121 } /* Literal.String.Affix */\n.codehilite .sb { color: #BA2121 } /* Literal.String.Backtick */\n.codehilite .sc { color: #BA2121 } /* Literal.String.Char */\n.codehilite .dl { color: #BA2121 } /* Literal.String.Delimiter */\n.codehilite .sd { color: #BA2121; font-style: italic } /* Literal.String.Doc */\n.codehilite .s2 { color: #BA2121 } /* Literal.String.Double */\n.codehilite .se { color: #AA5D1F; font-weight: bold } /* Literal.String.Escape */\n.codehilite .sh { color: #BA2121 } /* Literal.String.Heredoc */\n.codehilite .si { color: #A45A77; font-weight: bold } /* Literal.String.Interpol */\n.codehilite .sx { color: #008000 } /* Literal.String.Other */\n.codehilite .sr { color: #A45A77 } /* Literal.String.Regex */\n.codehilite .s1 { color: #BA2121 } /* Literal.String.Single */\n.codehilite .ss { color: #19177C } /* Literal.String.Symbol */\n.codehilite .bp { color: #008000 } /* Name.Builtin.Pseudo */\n.codehilite .fm { color: #00F } /* Name.Function.Magic */\n.codehilite .vc { color: #19177C } /* Name.Variable.Class */\n.codehilite .vg { color: #19177C } /* Name.Variable.Global */\n.codehilite .vi { color: #19177C } /* Name.Variable.Instance */\n.codehilite .vm { color: #19177C } /* Name.Variable.Magic */\n.codehilite .il { color: #666 } /* Literal.Number.Integer.Long */\n\n/* Styling per blocchi di codice */\n.codehilite {\n    background: transparent !important;\n    border-radius: 8px;\n    overflow: hidden;\n}\n.codehilite pre {\n    background: transparent !important;\n    margin: 0 !important;\n    padding: 20px !important;\n    font-family: 'Monaco', 'Menlo', 'Consolas', monospace !important;\n    font-size: 14px !important;\n    line-height: 1.5 !important;\n    white-space: pre !important;\n    overflow-x: auto !important;\n    color: inherit !important;\n}\n.codehilite code {\n    background: transparent !important;\n    padding: 0 !important;\n    font-family: inherit !important;\n}\n\n\n.code-wrapper { \n    position: relative; \n}\n.copy-button {\n    position: absolute; \n    top: 12px; \n    right: 12px; \n    padding: 6px 12px; \n    font-size: 12px;\n    cursor: pointer; \n    border: none; \n    border-radius: 4px; \n    background: rgba(255,255,255,0.9);\n    color: #374151; \n    transition: all 0.2s ease;\n    font-weight: 500;\n}\n.copy-button:hover { \n    background: rgba(255,255,255,1);\n    transform: translateY(-1px);\n}\n\n\ndetails.code-container {\n    border: 1px solid #e5e7eb; \n    border-radius: 12px; \n    background: #f9fafb;\n    margin: 16px 0;\n    transition: all 0.3s ease;\n}\ndetails.code-container summary {\n    padding: 12px 16px;\n    font-size: 14px; \n    color: #6b7280; \n    cursor: pointer; \n    outline: none; \n    user-select: none;\n    font-weight: 500;\n}\ndetails.code-container[open] summary::after { \n    content: \" (Hide Code)\"; \n    color: #9ca3af; \n}\ndetails.code-container:not([open]) summary::after { \n    content: \" (Show Code)\"; \n    color: #d1d5db; \n}\ndetails.code-container .code-wrapper {\n    padding: 0;\n    margin: 0;\n}\n/* Blocchi di codice sempre visibili */\n.code-visible {\n    border: 1px solid #e5e7eb;\n    border-radius: 12px;\n    background: #f9fafb;\n    margin: 16px 0;\n}\n.code-visible .code-wrapper {\n    padding: 0;\n    margin: 0;\n}\n</style>\n<h2 id=\"introduzione-e-motivazione\">Introduzione e Motivazione</h2>\n<p>Il meccanismo di <strong>self-attention</strong> tradizionale presenta una proprietà fondamentale che, a prima vista, potrebbe sembrare un vantaggio ma che in realtà costituisce una limitazione critica: è <strong>permutation invariant</strong>.</p>\n<p>Consideriamo due frasi apparentemente simili:\n- <em>&ldquo;Il gatto caccia il topo&rdquo;</em>\n- <em>&ldquo;Il topo caccia il gatto&rdquo;</em></p>\n<p>Per un essere umano, queste frasi hanno significati completamente diversi. Il primo descrive un predatore che insegue la sua preda, il secondo una situazione decisamente più insolita. La differenza semantica è interamente dovuta all&rsquo;<strong>ordine</strong> delle parole.</p>\n<p>Tuttavia, se applichiamo il meccanismo di self-attention puro a queste due frasi, otterremmo risultati identici. Questo perché l&rsquo;attention calcola una matrice di similarità dove ogni elemento dipende solo dal contenuto dei vettori, non dalla loro posizione nella sequenza.</p>\n<h3 id=\"il-problema-della-permutation-invariance\">Il Problema della Permutation Invariance</h3>\n<p>Matematicamente, se $\\pi$ è una permutazione degli indici $\\{1, 2, \\ldots, N\\}$, e definiamo:\n$$\\mathbf{X}' = \\begin{bmatrix} \\mathbf{x}_{\\pi(1)} & \\mathbf{x}_{\\pi(2)} & \\cdots & \\mathbf{x}_{\\pi(N)} \\end{bmatrix}$$</p>\n<p>allora:\n$$\\text{Attention}(\\mathbf{X}') = \\text{Permute}(\\text{Attention}(\\mathbf{X}), \\pi)$$</p>\n<p>In altre parole, l&rsquo;output dell&rsquo;attention su una sequenza permutata è semplicemente la permutazione dell&rsquo;output originale. Questo significa che il modello non può distinguere tra &ldquo;gatto caccia topo&rdquo; e &ldquo;topo caccia gatto&rdquo; basandosi solo sul contenuto semantico delle parole.</p>\n<h3 id=\"limportanza-dellordine-nel-linguaggio\">L&rsquo;Importanza dell&rsquo;Ordine nel Linguaggio</h3>\n<p>L&rsquo;ordine è cruciale in molti aspetti del linguaggio naturale:</p>\n<p><strong>Struttura sintattica</strong>: In &ldquo;La casa rossa è bella&rdquo;, l&rsquo;aggettivo &ldquo;rossa&rdquo; modifica &ldquo;casa&rdquo;, non &ldquo;bella&rdquo;. La posizione determina le relazioni sintattiche.</p>\n<p><strong>Relazioni causali</strong>: In &ldquo;Prima piove, poi esce il sole&rdquo;, l&rsquo;ordine temporale è semanticamente rilevante.</p>\n<p><strong>Ambiguità di scope</strong>: In &ldquo;Il professore ha visto lo studente con il telescopio&rdquo;, l&rsquo;interpretazione cambia se riordiniamo gli elementi.</p>\n<h2 id=\"la-soluzione-positional-encoding\">La Soluzione: Positional Encoding</h2>\n<p>Il <strong>positional encoding</strong> risolve questo problema iniettando informazione posizionale direttamente negli embedding di input, prima che vengano processati dal meccanismo di attention.</p>\n<p>L&rsquo;idea fondamentale è semplice: invece di utilizzare direttamente gli embedding delle parole $\\mathbf{x}_n$, utilizziamo una versione &ldquo;arricchita&rdquo;:</p>\n$$\\mathbf{x}'_n = \\mathbf{x}_n + \\mathbf{p}_n$$\n<p>dove $\\mathbf{p}_n \\in \\mathbb{R}^d$ è il <strong>positional encoding</strong> per la posizione $n$.</p>\n<p>Successivamente, applichiamo le trasformazioni lineari per ottenere query, key e value:</p>\n<ul>\n<li><strong>Query</strong>: $\\mathbf{q}_n = \\mathbf{W}_q \\mathbf{x}'_n + \\mathbf{b}_q = \\mathbf{W}_q (\\mathbf{x}_n + \\mathbf{p}_n) + \\mathbf{b}_q$</li>\n<li><strong>Key</strong>: $\\mathbf{k}_m = \\mathbf{W}_k \\mathbf{x}'_m + \\mathbf{b}_k = \\mathbf{W}_k (\\mathbf{x}_m + \\mathbf{p}_m) + \\mathbf{b}_k$</li>\n<li><strong>Value</strong>: $\\mathbf{v}_m = \\mathbf{W}_v \\mathbf{x}'_m + \\mathbf{b}_v = \\mathbf{W}_v (\\mathbf{x}_m + \\mathbf{p}_m) + \\mathbf{b}_v$</li>\n</ul>\n<h3 id=\"requisiti-per-un-positional-encoding-efficace\">Requisiti per un Positional Encoding Efficace</h3>\n<p>Un buon positional encoding deve soddisfare diversi requisiti:</p>\n<ol>\n<li><strong>Unicità</strong>: Posizioni diverse devono avere encoding diversi: $\\mathbf{p}_i \\neq \\mathbf{p}_j$ per $i \\neq j$</li>\n<li><strong>Determinismo</strong>: La stessa posizione deve sempre avere lo stesso encoding</li>\n<li><strong>Bounded</strong>: I valori devono rimanere in un range limitato per non dominare l&rsquo;informazione semantica</li>\n<li><strong>Relazione di distanza</strong>: Posizioni vicine dovrebbero avere encoding &ldquo;simili&rdquo; in qualche senso</li>\n<li><strong>Estendibilità</strong>: Deve funzionare per sequenze di lunghezza arbitraria, anche superiore a quelle viste durante il training</li>\n</ol>\n<h3 id=\"effetto-sui-punteggi-di-attention\">Effetto sui Punteggi di Attention</h3>\n<p>I punteggi di attention diventano:\n$$s_{mn} = \\frac{1}{\\sqrt{d_k}} \\mathbf{k}_m^T \\mathbf{q}_n = \\frac{1}{\\sqrt{d_k}} (\\mathbf{W}_k (\\mathbf{x}_m + \\mathbf{p}_m) + \\mathbf{b}_k)^T (\\mathbf{W}_q (\\mathbf{x}_n + \\mathbf{p}_n) + \\mathbf{b}_q)$$</p>\n<p>Espandendo e trascurando i termini di bias per semplicità:\n$$s_{mn} = \\frac{1}{\\sqrt{d_k}} \\left[ (\\mathbf{W}_k \\mathbf{x}_m)^T (\\mathbf{W}_q \\mathbf{x}_n) + (\\mathbf{W}_k \\mathbf{x}_m)^T (\\mathbf{W}_q \\mathbf{p}_n) + (\\mathbf{W}_k \\mathbf{p}_m)^T (\\mathbf{W}_q \\mathbf{x}_n) + (\\mathbf{W}_k \\mathbf{p}_m)^T (\\mathbf{W}_q \\mathbf{p}_n) \\right]$$</p>\n<h3 id=\"interpretazione-dei-quattro-termini\">Interpretazione dei Quattro Termini</h3>\n<ol>\n<li>\n<p><strong>Contenuto–Contenuto</strong><br />\n   $$(W_k \\mathbf{x}_m)^T (W_q \\mathbf{x}_n)$$<br />\n   È il termine originale: confronta il contenuto dei token (embedding) nelle posizioni $m$ e $n$.<br />\n   → Senza positional encoding rimarrebbe solo questo.</p>\n</li>\n<li>\n<p><strong>Contenuto–Posizione</strong><br />\n   $$(W_k \\mathbf{x}_m)^T (W_q \\mathbf{p}_n)$$<br />\n   Il contenuto in posizione $m$ viene confrontato con <em>la posizione</em> $n$.<br />\n   → Permette di modellare il fatto che un token (embedding) possa “guardare” preferenzialmente a certe posizioni della sequenza, indipendentemente dal contenuto.</p>\n</li>\n<li>\n<p><strong>Posizione–Contenuto</strong><br />\n   $$(W_k \\mathbf{p}_m)^T (W_q \\mathbf{x}_n)$$<br />\n   La posizione $m$ influenza come valutare il contenuto in $n$.<br />\n   → Esempio: il modello può imparare che i token (embedding) iniziali hanno un ruolo speciale rispetto agli altri.</p>\n</li>\n<li>\n<p><strong>Posizione–Posizione</strong><br />\n   $$(W_k \\mathbf{p}_m)^T (W_q \\mathbf{p}_n)$$<br />\n   Confronto puramente posizionale tra $m$ e $n$.<br />\n   → Con encoding sinusoidali, diventa una funzione della <strong>distanza relativa</strong> tra le due posizioni.</p>\n</li>\n</ol>\n<h3 id=\"sintesi\">Sintesi</h3>\n<p>Questa espansione mostra che il positional encoding non si limita ad arricchire gli embedding, ma <strong>entra direttamente nei calcoli di attenzione</strong> in quattro modi distinti:</p>\n<ul>\n<li><strong>Contenuto–Contenuto</strong>: relazione semantica fra token (il termine &ldquo;classico&rdquo;).  </li>\n<li><strong>Key–Posizione</strong> e <strong>Posizione–Query</strong>: interazioni miste che legano contenuto e posizione.  </li>\n<li><strong>Posizione–Posizione</strong>: relazioni strutturali fra posizioni, indipendenti dal contenuto.</li>\n</ul>\n<p>👉 In pratica, il modello non solo sa <em>cosa</em> c’è nella sequenza, ma anche <em>dove</em> e <em>in relazione a chi</em>.  </p>\n<h2 id=\"sinusoidal-positional-encoding-la-soluzione-elegante\">Sinusoidal Positional Encoding: La Soluzione Elegante</h2>\n<p>Il <strong>sinusoidal positional encoding</strong>, introdotto nel paper &ldquo;Attention Is All You Need&rdquo;, soddisfa tutti questi requisiti attraverso una formulazione matematicamente molto elegante.</p>\n<h3 id=\"definizione-matematica\">Definizione Matematica</h3>\n<p>Per una posizione $n$ e una dimensione $i$ (dove $i = 0, 1, 2, \\ldots, d-1$) dove $d$ rappresenta la dimensione dell&rsquo;embedding, il positional encoding è definito come:</p>\n$$\n\\text{PE}(n, i) = \\begin{cases}\n\\sin\\left(\\frac{n}{10000^{i/d}}\\right) & \\text{se } i \\text{ è pari} \\\\[0.3em]\n\\cos\\left(\\frac{n}{10000^{(i-1)/d}}\\right) & \\text{se } i \\text{ è dispari}\n\\end{cases}\n$$\n<p>Equivalentemente, possiamo scrivere:\n$$\n\\text{PE}(n, 2j) = \\sin\\left(\\frac{n}{10000^{2j/d}}\\right)\n$$\n$$\n\\text{PE}(n, 2j+1) = \\cos\\left(\\frac{n}{10000^{2j/d}}\\right)\n$$</p>\n<p>dove $j = 0, 1, 2, \\ldots, \\lfloor d/2 \\rfloor - 1$.</p>\n<h3 id=\"interpretazione-delle-frequenze\">Interpretazione delle Frequenze</h3>\n<p>Ogni coppia di dimensioni $(2j, 2j+1)$ corrisponde a una <strong>frequenza</strong> specifica:\n$$\\omega_j = \\frac{1}{10000^{2j/d}}$$</p>\n<p>Le dimensioni con indice basso hanno frequenze alte (oscillazioni rapide), mentre le dimensioni con indice alto hanno frequenze basse (oscillazioni lente).</p>\n<p>Questa struttura crea una sorta di &ldquo;orologio multidimensionale&rdquo; dove:\n- Le dimensioni a <strong>frequenza alta</strong> distinguono posizioni vicine\n- Le dimensioni a <strong>frequenza bassa</strong> catturano pattern a lungo raggio</p>\n<h3 id=\"esempio-numerico\">Esempio Numerico</h3>\n<p>In questo esempio, calcoliamo e visualizziamo il <strong>positional encoding sinusoidale</strong> introdotto nel paper <em>&ldquo;Attention Is All You Need&rdquo;</em>.</p>\n<h4 id=\"1-funzione-di-calcolo\">1. Funzione di Calcolo</h4>\n<p>Definiamo una funzione per calcolare la matrice di positional encoding, che prende in input il numero massimo di posizioni della sequenza e la dimensione dell&rsquo;embedding.</p>\n<details class=\"code-container\">\n<summary>Code</summary>\n<div class=\"code-wrapper\">\n<button class=\"copy-button\" onclick=\"\n                const code = this.parentElement.querySelector('pre');\n                if (code) {\n                    navigator.clipboard.writeText(code.innerText);\n                    this.textContent = 'Copied!';\n                    setTimeout(() => this.textContent = 'Copy', 2000);\n                }\n            \">Copy</button>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">numpy</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">np</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">matplotlib.pyplot</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">plt</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">seaborn</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">sns</span>\n\n<span class=\"c1\"># ----------------------------</span>\n<span class=\"c1\"># Funzione Positional Encoding</span>\n<span class=\"c1\"># ----------------------------</span>\n<span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">sinusoidal_positional_encoding</span><span class=\"p\">(</span><span class=\"n\">max_position</span><span class=\"p\">,</span> <span class=\"n\">d_model</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Genera un array di posizioni da 0 a max_position-1</span>\n    <span class=\"n\">position</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"n\">max_position</span><span class=\"p\">)[:,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">newaxis</span><span class=\"p\">]</span>  \n\n    <span class=\"c1\"># Calcola il termine di divisione per le frequenze esponenziali</span>\n    <span class=\"c1\"># Usando exp e log per stabilità numerica invece di 10000^(2i/d)</span>\n    <span class=\"n\">div_term</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">d_model</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"o\">-</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"mf\">10000.0</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">d_model</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># Inizializza la matrice dei positional encoding a zero</span>\n    <span class=\"n\">pe</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"n\">max_position</span><span class=\"p\">,</span> <span class=\"n\">d_model</span><span class=\"p\">))</span>  \n\n    <span class=\"c1\"># Dimensioni pari: sinus</span>\n    <span class=\"n\">pe</span><span class=\"p\">[:,</span> <span class=\"mi\">0</span><span class=\"p\">::</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">position</span> <span class=\"o\">*</span> <span class=\"n\">div_term</span><span class=\"p\">)</span>  \n    <span class=\"c1\"># Dimensioni dispari: coseno</span>\n    <span class=\"n\">pe</span><span class=\"p\">[:,</span> <span class=\"mi\">1</span><span class=\"p\">::</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">position</span> <span class=\"o\">*</span> <span class=\"n\">div_term</span><span class=\"p\">)</span>  \n\n    <span class=\"c1\"># Ritorna la matrice PE (posizioni x dimensioni embedding)</span>\n    <span class=\"k\">return</span> <span class=\"n\">pe</span>\n</code></pre></div>\n</div>\n</details>\n\n<h4 id=\"motivazione-delluso-di-log-ed-exp\">Motivazione dell&rsquo;Uso di log ed exp</h4>\n<p>Vediamo perché riscriviamo la formula in forma esponenziale:</p>\n$$\n10000^{2i/d} = \\exp\\left(\\frac{2i}{d} \\log 10000\\right)\n$$\n<p>Quindi la divisione originale:</p>\n$$\n\\frac{n}{10000^{2i/d}} = n \\cdot \\exp\\left(- \\frac{2i}{d} \\log 10000\\right)\n$$\n<h5 id=\"motivo-della-log\">Motivo della log:</h5>\n<p>Usando <code>log</code> ed <code>exp</code> evitiamo di calcolare potenze molto grandi o molto piccole direttamente.<br />\nQuesto migliora la <strong>stabilità numerica</strong> e previene <strong>overflow</strong> o <strong>underflow</strong>.</p>\n<h5 id=\"equivalenza\">Equivalenza:</h5>\n<p>Matematicamente, <code>position * div_term</code> nel codice equivale a <code>n / 10000^(2i/d)</code> della formula originale.</p>\n<h4 id=\"2-parametri-di-esempio\">2. Parametri di Esempio</h4>\n<p>Per visualizzare i pattern tipici:\n- Numero di posizioni: <code>max_position = 100</code><br />\n- Dimensione dell&rsquo;embedding: <code>d_model = 128</code>  </p>\n<details class=\"code-container\">\n<summary>Code</summary>\n<div class=\"code-wrapper\">\n<button class=\"copy-button\" onclick=\"\n                const code = this.parentElement.querySelector('pre');\n                if (code) {\n                    navigator.clipboard.writeText(code.innerText);\n                    this.textContent = 'Copied!';\n                    setTimeout(() => this.textContent = 'Copy', 2000);\n                }\n            \">Copy</button>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># Parametri</span>\n<span class=\"n\">max_position</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>   <span class=\"c1\"># Numero di posizioni da visualizzare</span>\n<span class=\"n\">d_model</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>        <span class=\"c1\"># Dimensione embedding</span>\n\n<span class=\"c1\"># Calcolo PE</span>\n<span class=\"n\">pe</span> <span class=\"o\">=</span> <span class=\"n\">sinusoidal_positional_encoding</span><span class=\"p\">(</span><span class=\"n\">max_position</span><span class=\"p\">,</span> <span class=\"n\">d_model</span><span class=\"p\">)</span>\n</code></pre></div>\n</div>\n</details>\n\n<h3 id=\"3-heatmap-della-matrice-pe\">3. Heatmap della Matrice PE</h3>\n<p>Visualizziamo l&rsquo;intera matrice PE con una <strong>heatmap</strong>:</p>\n<ul>\n<li>Asse verticale → posizioni nella sequenza  </li>\n<li>Asse orizzontale → dimensioni dell&rsquo;embedding  </li>\n<li>Palette colori accattivante per evidenziare le oscillazioni sinusoidali  </li>\n</ul>\n<details class=\"code-container\">\n<summary>Code</summary>\n<div class=\"code-wrapper\">\n<button class=\"copy-button\" onclick=\"\n                const code = this.parentElement.querySelector('pre');\n                if (code) {\n                    navigator.clipboard.writeText(code.innerText);\n                    this.textContent = 'Copied!';\n                    setTimeout(() => this.textContent = 'Copy', 2000);\n                }\n            \">Copy</button>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># Heatmap con palette</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">14</span><span class=\"p\">))</span>\n<span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">heatmap</span><span class=\"p\">(</span><span class=\"n\">pe</span><span class=\"p\">,</span> <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"s1\">&#39;magma&#39;</span><span class=\"p\">,</span> <span class=\"n\">cbar</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">vmin</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">vmax</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># Cambiato cmap</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">&#39;Sinusoidal Positional Encoding Heatmap&#39;</span><span class=\"p\">,</span> <span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"n\">fontweight</span><span class=\"o\">=</span><span class=\"s1\">&#39;bold&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">xlabel</span><span class=\"p\">(</span><span class=\"s1\">&#39;Dimensioni embedding&#39;</span><span class=\"p\">,</span> <span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">ylabel</span><span class=\"p\">(</span><span class=\"s1\">&#39;Posizione nella sequenza&#39;</span><span class=\"p\">,</span> <span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</code></pre></div>\n</div>\n</details>\n\n<p><img src=\"/images/posts/sinusoidal-pe.png\" alt=\"Sinusoidal Positional Encoding Heatmap\" style=\"display: block; margin: 0 auto\"></p>\n<h3 id=\"4-andamento-di-dimensioni-selezionate\">4. Andamento di Dimensioni Selezionate</h3>\n<p>Per osservare come cambiano alcune dimensioni chiave attraverso la sequenza:</p>\n<ul>\n<li>Selezioniamo dimensioni rappresentative (es. 0, 3, 7, 15, 31)  </li>\n<li>Plottiamo il loro andamento lungo le posizioni  </li>\n</ul>\n<details class=\"code-container\">\n<summary>Code</summary>\n<div class=\"code-wrapper\">\n<button class=\"copy-button\" onclick=\"\n                const code = this.parentElement.querySelector('pre');\n                if (code) {\n                    navigator.clipboard.writeText(code.innerText);\n                    this.textContent = 'Copied!';\n                    setTimeout(() => this.textContent = 'Copy', 2000);\n                }\n            \">Copy</button>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># Visualizzazione Dimensioni Selezionate</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">))</span>\n<span class=\"n\">dims_to_plot</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">31</span><span class=\"p\">]</span>  <span class=\"c1\"># Dimensioni chiave</span>\n<span class=\"n\">colors</span> <span class=\"o\">=</span> <span class=\"n\">sns</span><span class=\"o\">.</span><span class=\"n\">color_palette</span><span class=\"p\">(</span><span class=\"s2\">&quot;tab10&quot;</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">dims_to_plot</span><span class=\"p\">))</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">d</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">dims_to_plot</span><span class=\"p\">):</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">pe</span><span class=\"p\">[:,</span> <span class=\"n\">d</span><span class=\"p\">],</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Dim </span><span class=\"si\">{</span><span class=\"n\">d</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"n\">colors</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">linewidth</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s1\">&#39;Sinusoidal Positional Encoding - Dimensioni Selezionate&#39;</span><span class=\"p\">,</span> <span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"n\">fontweight</span><span class=\"o\">=</span><span class=\"s1\">&#39;bold&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">xlabel</span><span class=\"p\">(</span><span class=\"s1\">&#39;Posizione nella sequenza&#39;</span><span class=\"p\">,</span> <span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">ylabel</span><span class=\"p\">(</span><span class=\"s1\">&#39;Valore PE&#39;</span><span class=\"p\">,</span> <span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.3</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">(</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">&#39;Dimensioni&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">tight_layout</span><span class=\"p\">()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</code></pre></div>\n</div>\n</details>\n\n<p><img src=\"/images/posts/grafico-lineare-dimensioni-selezionate.png\" alt=\"Grafico Lineare Dimensioni Selezionate\" style=\"display: block; margin-left: auto; margin-right: auto;\"></p>\n<h3 id=\"5-esempio-concreto\">5. Esempio Concreto</h3>\n<p>Per avere un’idea numerica dei valori:</p>\n<ul>\n<li>Consideriamo le prime 5 posizioni con dimensione embedding ridotta (es. 6)  </li>\n<li>Stampiamo i vettori di positional encoding corrispondenti  </li>\n</ul>\n<details class=\"code-container\">\n<summary>Code</summary>\n<div class=\"code-wrapper\">\n<button class=\"copy-button\" onclick=\"\n                const code = this.parentElement.querySelector('pre');\n                if (code) {\n                    navigator.clipboard.writeText(code.innerText);\n                    this.textContent = 'Copied!';\n                    setTimeout(() => this.textContent = 'Copy', 2000);\n                }\n            \">Copy</button>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># Esempio concreto delle prime posizioni</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Prime 5 posizioni (dimensioni 6):&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">pe_small</span> <span class=\"o\">=</span> <span class=\"n\">sinusoidal_positional_encoding</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">pe_small</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Posizione </span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"si\">}</span><span class=\"s2\">: </span><span class=\"si\">{</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">round</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n<span class=\"p\">[</span><span class=\"n\">OUTPUT</span><span class=\"p\">:]</span>\n<span class=\"n\">Prime</span> <span class=\"mi\">5</span> <span class=\"n\">posizioni</span> <span class=\"p\">(</span><span class=\"n\">dimensioni</span> <span class=\"mi\">6</span><span class=\"p\">):</span>\n<span class=\"n\">Posizione</span> <span class=\"mi\">0</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">0.</span> <span class=\"mf\">1.</span> <span class=\"mf\">0.</span> <span class=\"mf\">1.</span> <span class=\"mf\">0.</span> <span class=\"mf\">1.</span><span class=\"p\">]</span>\n<span class=\"n\">Posizione</span> <span class=\"mi\">1</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">0.841</span> <span class=\"mf\">0.54</span>  <span class=\"mf\">0.046</span> <span class=\"mf\">0.999</span> <span class=\"mf\">0.002</span> <span class=\"mf\">1.</span>   <span class=\"p\">]</span>\n<span class=\"n\">Posizione</span> <span class=\"mi\">2</span><span class=\"p\">:</span> <span class=\"p\">[</span> <span class=\"mf\">0.909</span> <span class=\"o\">-</span><span class=\"mf\">0.416</span>  <span class=\"mf\">0.093</span>  <span class=\"mf\">0.996</span>  <span class=\"mf\">0.004</span>  <span class=\"mf\">1.</span>   <span class=\"p\">]</span>\n<span class=\"n\">Posizione</span> <span class=\"mi\">3</span><span class=\"p\">:</span> <span class=\"p\">[</span> <span class=\"mf\">0.141</span> <span class=\"o\">-</span><span class=\"mf\">0.99</span>   <span class=\"mf\">0.139</span>  <span class=\"mf\">0.99</span>   <span class=\"mf\">0.006</span>  <span class=\"mf\">1.</span>   <span class=\"p\">]</span>\n<span class=\"n\">Posizione</span> <span class=\"mi\">4</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">0.757</span> <span class=\"o\">-</span><span class=\"mf\">0.654</span>  <span class=\"mf\">0.185</span>  <span class=\"mf\">0.983</span>  <span class=\"mf\">0.009</span>  <span class=\"mf\">1.</span>   <span class=\"p\">]</span>\n</code></pre></div>\n</div>\n</details>\n\n<h3 id=\"visualizzazione-dei-pattern\">Visualizzazione dei Pattern</h3>\n<p>Osservando questi vettori, notiamo pattern interessanti:</p>\n<p><strong>Frequenze diverse</strong>: Le prime due dimensioni (frequenza alta) cambiano rapidamente tra posizioni consecutive, mentre le ultime due (frequenza bassa) cambiano più gradualmente.</p>\n<p><strong>Unicità</strong>: Ogni posizione ha un &ldquo;fingerprint&rdquo; unico dato dalla combinazione delle diverse frequenze.</p>\n<p><strong>Continuità</strong>: Posizioni adiacenti hanno encoding simili ma distinguibili.</p>\n<h2 id=\"proprieta-matematiche-del-sinusoidal-encoding\">Proprietà Matematiche del Sinusoidal Encoding</h2>\n<h3 id=\"1-proprieta-di-linearita\">1. Proprietà di Linearità</h3>\n<p>Una delle proprietà più eleganti del sinusoidal encoding è che permette di calcolare l&rsquo;encoding di una posizione $n + k$ a partire da quello della posizione $n$ attraverso una <strong>trasformazione lineare</strong>.</p>\n<p>Per una singola frequenza $\\omega_j$, abbiamo:\n$$\n\\begin{bmatrix}\n\\sin(\\omega_j(n + k)) \\\\\n\\cos(\\omega_j(n + k))\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n\\cos(\\omega_j k) & \\sin(\\omega_j k) \\\\\n-\\sin(\\omega_j k) & \\cos(\\omega_j k)\n\\end{bmatrix}\n\\begin{bmatrix}\n\\sin(\\omega_j n) \\\\\n\\cos(\\omega_j n)\n\\end{bmatrix}\n$$</p>\n<p>Questa è una <strong>matrice di rotazione</strong> di angolo $\\omega_j k$.</p>\n<h3 id=\"2-prodotto-scalare-e-distanza\">2. Prodotto Scalare e Distanza</h3>\n<p>Il prodotto scalare tra gli encoding di due posizioni ha una forma analitica precisa:\n$$\n\\begin{aligned}\n\\mathbf{p}_i^T \\mathbf{p}_j \n&= \\sum_{m=0}^{d-1} (\\mathbf{p}_i)_m \\cdot (\\mathbf{p}_j)_m \\\\[2mm]\n&= \\sum_{k=0}^{d/2-1} \\Big[ (\\mathbf{p}_i)_{2k} (\\mathbf{p}_j)_{2k} + (\\mathbf{p}_i)_{2k+1} (\\mathbf{p}_j)_{2k+1} \\Big] \\\\[1mm]\n&= \\sum_{k=0}^{d/2-1} \\Big[ \\sin(\\omega_k i) \\sin(\\omega_k j) + \\cos(\\omega_k i) \\cos(\\omega_k j) \\Big] \\\\[1mm]\n&= \\sum_{k=0}^{d/2-1} \\cos(\\omega_k (i-j)) \\quad \\text{(per l'identità trigonometrica } \\cos(a-b) = \\cos a \\cos b + \\sin a \\sin b \\text{)}\n\\end{aligned}\n$$</p>\n<p>Questo significa che la &ldquo;similarità&rdquo; tra due posizioni dipende solo dalla loro <strong>distanza relativa</strong> $|i-j|$, non dalle posizioni assolute.</p>\n<h3 id=\"3-bounded-values\">3. Bounded Values</h3>\n<p>Tutti i valori del positional encoding sono compresi tra $-1$ e $1$:\n$$-1 \\leq \\text{PE}(n, i) \\leq 1 \\quad \\forall n, i$$</p>\n<p>Questo assicura che il positional encoding non domini l&rsquo;informazione semantica degli embedding.</p>\n<h3 id=\"4-estendibilita\">4. Estendibilità</h3>\n<p>Il sinusoidal encoding può essere calcolato per posizioni arbitrariamente grandi senza bisogno di riaddestramento, poiché le funzioni trigonometriche sono definite per tutti i numeri reali.</p>\n<h2 id=\"integrazione-con-lattention-mechanism\">Integrazione con l&rsquo;Attention Mechanism</h2>\n<h3 id=\"formulazione-matriciale-completa\">Formulazione Matriciale Completa</h3>\n<p>Nel meccanismo di attention con positional encoding, partiamo dagli embedding arricchiti:\n$$\\mathbf{X}' = \\mathbf{X} + \\mathbf{P} \\in \\mathbb{R}^{d \\times N}$$</p>\n<p>dove:\n- $\\mathbf{X} = [\\mathbf{x}_1, \\mathbf{x}_2, \\ldots, \\mathbf{x}_N] \\in \\mathbb{R}^{d \\times N}$ contiene gli embedding di contenuto\n- $\\mathbf{P} = [\\mathbf{p}_1, \\mathbf{p}_2, \\ldots, \\mathbf{p}_N] \\in \\mathbb{R}^{d \\times N}$ contiene i positional encoding</p>\n<p>Le matrici di query, key e value diventano:\n$$\n\\begin{align}\n\\mathbf{Q} &= \\mathbf{W}_q \\mathbf{X}' + \\mathbf{b}_q \\mathbf{1}^T = \\mathbf{W}_q (\\mathbf{X} + \\mathbf{P}) + \\mathbf{b}_q \\mathbf{1}^T \\in \\mathbb{R}^{d_k \\times N} \\\\\n\\mathbf{K} &= \\mathbf{W}_k \\mathbf{X}' + \\mathbf{b}_k \\mathbf{1}^T = \\mathbf{W}_k (\\mathbf{X} + \\mathbf{P}) + \\mathbf{b}_k \\mathbf{1}^T \\in \\mathbb{R}^{d_k \\times N} \\\\\n\\mathbf{V} &= \\mathbf{W}_v \\mathbf{X}' + \\mathbf{b}_v \\mathbf{1}^T = \\mathbf{W}_v (\\mathbf{X} + \\mathbf{P}) + \\mathbf{b}_v \\mathbf{1}^T \\in \\mathbb{R}^{d_v \\times N}\n\\end{align}\n$$</p>\n<p>dove $\\mathbf{1} \\in \\mathbb{R}^N$ è un vettore di uni per il broadcasting dei bias.</p>\n<h3 id=\"calcolo-degli-score-di-attention\">Calcolo degli Score di Attention</h3>\n<p>La matrice degli score (prima dell&rsquo;applicazione della softmax) è:\n$$\\mathbf{S} = \\frac{1}{\\sqrt{d_k}} \\mathbf{K}^T \\mathbf{Q} \\in \\mathbb{R}^{N \\times N}$$</p>\n<p>dove l&rsquo;elemento $(m,n)$ rappresenta lo score tra la key della posizione $m$ e la query della posizione $n$:\n$$s_{mn} = \\frac{1}{\\sqrt{d_k}} \\mathbf{k}_m^T \\mathbf{q}_n$$</p>\n<h3 id=\"applicazione-della-softmax\">Applicazione della Softmax</h3>\n<p>I pesi di attention sono ottenuti applicando la softmax per righe:\n$$a_{mn} = \\frac{\\exp(s_{mn})}{\\sum_{j=1}^N \\exp(s_{jn})}$$</p>\n<p>assicurando che $\\sum_{m=1}^N a_{mn} = 1$ per ogni $n$.</p>\n<h3 id=\"output-finale\">Output Finale</h3>\n<p>L&rsquo;output dell&rsquo;attention mechanism è:\n$$\\mathbf{Y} = \\mathbf{V} \\mathbf{A} \\in \\mathbb{R}^{d_v \\times N}$$</p>\n<p>dove ogni colonna $\\mathbf{y}_n$ è una combinazione pesata dei value:\n$$\\mathbf{y}_n = \\sum_{m=1}^N a_{mn} \\mathbf{v}_m$$</p>\n<h2 id=\"varianti-del-positional-encoding\">Varianti del Positional Encoding</h2>\n<h3 id=\"learned-positional-encoding\">Learned Positional Encoding</h3>\n<p>Invece di utilizzare funzioni sinusoidali fisse, alcuni modelli apprendono gli encoding come parametri:</p>\n$$\\mathbf{P} = [\\mathbf{p}_1, \\mathbf{p}_2, \\ldots, \\mathbf{p}_{N_{\\max}}] \\in \\mathbb{R}^{d \\times N_{\\max}}$$\n<p>dove ogni $\\mathbf{p}_n$ è un parametro appreso durante il training.</p>\n<p><strong>Vantaggi:</strong>\n- Maggiore flessibilità adattiva\n- Possibile ottimizzazione per compiti specifici</p>\n<p><strong>Svantaggi:</strong>\n- Limitati alla lunghezza massima vista in training\n- Maggior numero di parametri\n- Possibile overfitting</p>\n<h3 id=\"relative-positional-encoding\">Relative Positional Encoding</h3>\n<p>Alcuni modelli utilizzano encoding relativi che dipendono dalla distanza tra posizioni piuttosto che dalle posizioni assolute:</p>\n$$\\text{PE}_{\\text{rel}}(i, j) = f(i - j)$$\n<p>Questo approccio è particolarmente utile per modelli che devono generalizzare a sequenze molto lunghe.</p>\n<h3 id=\"rotary-position-embedding-rope\">Rotary Position Embedding (RoPE)</h3>\n<p>RoPE integra l&rsquo;informazione posizionale direttamente nel prodotto scalare attention attraverso rotazioni nello spazio complesso:</p>\n$$(\\mathbf{q}_m^{\\text{RoPE}})^T \\mathbf{k}_n^{\\text{RoPE}} = \\mathbf{q}_m^T \\mathbf{R}_m^T \\mathbf{R}_n \\mathbf{k}_n$$\n<p>dove $\\mathbf{R}_i$ è una matrice di rotazione dipendente dalla posizione.</p>\n<h2 id=\"considerazioni-avanzate\">Considerazioni Avanzate</h2>\n<h3 id=\"scaling-del-positional-encoding\">Scaling del Positional Encoding</h3>\n<p>In alcuni modelli, il positional encoding viene scalato per controllare la sua influenza relativa rispetto al contenuto semantico:</p>\n$$\\mathbf{x}'_n = \\mathbf{x}_n + \\alpha \\cdot \\mathbf{p}_n$$\n<p>dove $\\alpha$ è un iperparametro che determina l&rsquo;importanza relativa dell&rsquo;informazione posizionale.</p>\n<h3 id=\"interazione-con-dropout\">Interazione con Dropout</h3>\n<p>Il positional encoding viene tipicamente applicato prima del dropout layer:</p>\n$$\\mathbf{x}''_n = \\text{Dropout}(\\mathbf{x}_n + \\mathbf{p}_n)$$\n<p>Questo permette al modello di apprendere robustezza rispetto a piccole perturbazioni nell&rsquo;informazione posizionale.</p>\n<h3 id=\"limitazioni-del-sinusoidal-encoding\">Limitazioni del Sinusoidal Encoding</h3>\n<p><strong>Ambiguità per sequenze molto lunghe</strong>: Per sequenze estremamente lunghe, le funzioni sinusoidali possono iniziare a &ldquo;ripetersi&rdquo;, creando ambiguità posizionali.</p>\n<p><strong>Linearità delle relazioni</strong>: Il modello assume che le relazioni posizionali siano catturabili attraverso combinazioni lineari di funzioni trigonometriche.</p>\n<p><strong>Mancanza di adattabilità</strong>: A differenza dei learned embeddings, i pattern sinusoidali sono fissi e non possono adattarsi a pattern posizionali specifici del task.</p>\n<h2 id=\"effetti-sui-transformer\">Effetti sui Transformer</h2>\n<h3 id=\"architettura-completa\">Architettura Completa</h3>\n<p>Nel Transformer completo, il positional encoding viene aggiunto all&rsquo;inizio:</p>\n<details class=\"code-container\">\n<summary>Code</summary>\n<div class=\"code-wrapper\">\n<button class=\"copy-button\" onclick=\"\n                const code = this.parentElement.querySelector('pre');\n                if (code) {\n                    navigator.clipboard.writeText(code.innerText);\n                    this.textContent = 'Copied!';\n                    setTimeout(() => this.textContent = 'Copy', 2000);\n                }\n            \">Copy</button>\n<div class=\"codehilite\"><pre><span></span><code>Input Embeddings → + Positional Encoding → Multi-Head Attention → ...\n</code></pre></div>\n</div>\n</details>\n\n<p>Questo significa che <strong>tutta l&rsquo;architettura</strong> downstream beneficia dell&rsquo;informazione posizionale.</p>\n<h3 id=\"multi-head-attention\"><a href=\"/theory/deep-learning/Transformers/Attention/Multi-Head Attention\" class=\"text-blue-600 hover:underline\">Multi-Head Attention</a></h3>\n<p>Nel multi-head attention, il positional encoding influenza <strong>tutte le teste</strong> simultaneamente:</p>\n$$\\text{Head}_h = \\text{Attention}(\\mathbf{Q}_h, \\mathbf{K}_h, \\mathbf{V}_h)$$\n<p>dove:\n$$\n\\begin{align}\n\\mathbf{Q}_h = \\mathbf{W}_q^{(h)} (\\mathbf{X} + \\mathbf{P})\\\\\n\\mathbf{K}_h = \\mathbf{W}_k^{(h)} (\\mathbf{X} + \\mathbf{P})\\\\\n\\mathbf{V}_h = \\mathbf{W}_v^{(h)} (\\mathbf{X} + \\mathbf{P})\n\\end{align}\n$$</p>\n<p>Ogni testa può quindi specializzarsi nel catturare diversi tipi di relazioni posizionali.</p>\n<h3 id=\"layer-profondi\">Layer Profondi</h3>\n<p>Un aspetto interessante è che il positional encoding viene aggiunto solo all&rsquo;input del primo layer. I layer successivi ricevono informazione posizionale attraverso le rappresentazioni elaborate dai layer precedenti.</p>\n<p>Questo crea una <strong>gerarchia di informazione posizionale</strong>:\n- <strong>Layer bassi</strong>: Relazioni posizionali esplicite e dirette\n- <strong>Layer alti</strong>: Relazioni posizionali integrate con informazione semantica complessa</p>\n<h2 id=\"validazione-empirica-e-risultati\">Validazione Empirica e Risultati</h2>\n<h3 id=\"ablation-studies\">Ablation Studies</h3>\n<p>Studi di ablazione hanno dimostrato l&rsquo;importanza critica del positional encoding:</p>\n<ul>\n<li>\n<p><strong>Senza positional encoding</strong>: I modelli Transformer perdono drasticamente performance su task che richiedono comprensione dell&rsquo;ordine sequenziale.</p>\n</li>\n<li>\n<p><strong>Con positional encoding</strong>: Miglioramenti significativi in traduzione automatica, language modeling e task di comprensione del linguaggio.</p>\n</li>\n</ul>\n<h3 id=\"analisi-dei-pattern-appresi\">Analisi dei Pattern Appresi</h3>\n<p>Visualizzazioni delle matrici di attention nei Transformer addestrati mostrano che il positional encoding permette l&rsquo;emergere di pattern linguistici complessi:</p>\n<ul>\n<li><strong>Local attention</strong>: Parole adiacenti spesso si prestano attenzione reciproca</li>\n<li><strong>Syntactic attention</strong>: Relazioni sintattiche (soggetto-verbo, sostantivo-aggettivo) vengono catturate</li>\n<li><strong>Long-range dependencies</strong>: Dipendenze a lungo raggio diventano più facilmente learnable</li>\n</ul>\n<h2 id=\"considerazioni-implementative\">Considerazioni Implementative</h2>\n<h3 id=\"efficienza-computazionale\">Efficienza Computazionale</h3>\n<p>Il positional encoding ha un costo computazionale trascurabile:\n- <strong>Sinusoidal</strong>: $O(Nd)$ per il calcolo, $O(d)$ per la memorizzazione (pattern ripetibile)\n- <strong>Learned</strong>: $O(1)$ per l&rsquo;accesso, $O(N_{\\max}d)$ per la memorizzazione</p>\n<h3 id=\"stabilita-numerica\">Stabilità Numerica</h3>\n<p>L&rsquo;uso di funzioni trigonometriche garantisce valori bounded, ma richiede attenzione nella scelta della base (10000 nel caso standard) per evitare frequenze troppo alte o troppo basse.</p>\n<h3 id=\"compatibilita-cross-architecture\">Compatibilità Cross-Architecture</h3>\n<p>Il sinusoidal encoding è diventato uno standard de facto, garantendo compatibilità tra diversi modelli e implementazioni.</p>\n<h2 id=\"direzioni-future\">Direzioni Future</h2>\n<h3 id=\"encoding-adattivo\">Encoding Adattivo</h3>\n<p>Ricerche recenti esplorano encoding che si adattano dinamicamente alla lunghezza della sequenza o al contenuto:</p>\n$$\\mathbf{p}_n = f(n, \\mathbf{x}_1, \\ldots, \\mathbf{x}_N, \\theta)$$\n<h3 id=\"encoding-multidimensionale\">Encoding Multidimensionale</h3>\n<p>Per task che coinvolgono strutture 2D o 3D (immagini, grafi), si sviluppano encoding posizionali multidimensionali:</p>\n$$\\text{PE}(x, y, i) = \\sin\\left(\\frac{x \\cdot y}{10000^{i/d}}\\right)$$\n<h3 id=\"encoding-gerarchico\">Encoding Gerarchico</h3>\n<p>Per catturare strutture gerarchiche (paragrafi, sezioni, documenti), si utilizzano encoding a più livelli:</p>\n$$\\mathbf{p}_n = \\mathbf{p}_n^{\\text{word}} + \\mathbf{p}_n^{\\text{sentence}} + \\mathbf{p}_n^{\\text{paragraph}}$$\n<h2 id=\"conclusioni\">Conclusioni</h2>\n<p>Il positional encoding rappresenta una soluzione elegante e matematicamente fondata al problema della permutation invariance nell&rsquo;attention mechanism. Attraverso l&rsquo;iniezione di informazione posizionale negli embedding di input, permette ai Transformer di catturare sia relazioni semantiche che strutturali.</p>\n<p>La scelta del sinusoidal encoding come standard si basa su una combinazione di:\n- <strong>Eleganza matematica</strong>: Proprietà di linearità e periodicità ben definite\n- <strong>Efficienza computazionale</strong>: Calcolo deterministico senza parametri aggiuntivi\n- <strong>Estendibilità</strong>: Funziona per sequenze di lunghezza arbitraria\n- <strong>Interpretabilità</strong>: Pattern di frequenza comprensibili</p>\n<p>Il positional encoding non è semplicemente un &ldquo;trucco tecnico&rdquo;, ma rappresenta un ponte fondamentale tra la potenza computazionale dell&rsquo;attention mechanism e i requisiti strutturali del linguaggio naturale. La sua introduzione ha reso possibile l&rsquo;emergere dei Transformer come architettura dominante nel deep learning moderno.</p>\n<p>Comprendere il positional encoding è quindi essenziale per chiunque voglia padroneggiare i moderni modelli di linguaggio e contribuire al loro sviluppo futuro.</p>"
}